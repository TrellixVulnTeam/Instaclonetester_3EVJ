{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/SignUpCard/SignUpCard.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { signUpStart } from '../../redux/user/userActions';\nimport { selectError, selectFetching } from '../../redux/user/userSelectors';\nimport { validateEmail, validateFullName, validateUsername, validatePassword } from '../../utils/validation';\nimport Button from '../Button/Button';\nimport TextButton from '../Button/TextButton/TextButton';\nimport Divider from '../Divider/Divider';\nimport Card from '../Card/Card';\nimport FormInput from '../FormInput/FormInput';\nimport ViewOnGithubButton from '../ViewOnGithubButton/ViewOnGithubButton';\nimport GithubLoginButton from '../GithubLoginButton/GithubLoginButton';\n\nconst SignUpCard = ({\n  signUpStart,\n  error,\n  fetching\n}) => {\n  const validate = values => {\n    const errors = {};\n    const emailError = validateEmail(values.email);\n    if (emailError) errors.email = emailError;\n    const fullNameError = validateFullName(values.fullName);\n    if (fullNameError) errors.fullName = fullNameError;\n    const usernameError = validateUsername(values.username);\n    if (usernameError) errors.username = usernameError;\n    const passwordError = validatePassword(values.password);\n    if (passwordError) errors.password = passwordError;\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      fullName: '',\n      username: '',\n      password: ''\n    },\n    validate,\n    onSubmit: values => signUpStart(values.email, values.fullName, values.username, values.password)\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"form-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading-logo text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Instaclone\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      fontSize: '1.7rem'\n    },\n    className: \"heading-2 color-grey text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Sign up to see photos and videos from your friends.\"), /*#__PURE__*/React.createElement(GithubLoginButton, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      color: 'white'\n    },\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-card__form\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    fieldProps: formik.getFieldProps('email'),\n    valid: formik.touched.email && !formik.errors.email,\n    placeholder: \"Email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"fullName\",\n    fieldProps: formik.getFieldProps('fullName'),\n    valid: formik.touched.fullName && !formik.errors.fullName,\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"username\",\n    fieldProps: formik.getFieldProps('username'),\n    valid: formik.touched.username && !formik.errors.username,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    fieldProps: formik.getFieldProps('password'),\n    placeholder: \"Password\",\n    valid: formik.touched.password && !formik.errors.password,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: fetching,\n    disabled: Object.keys(formik.touched).length === 0 ? true : !formik.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, error ? error : formik.submitCount > 0 && Object.values(formik.errors)[0]), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading-5 color-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"By signing up, you agree to our Terms . Learn how we collect, use and share your data in our Data Policy and how we use cookies and similar technology in our Cookies Policy .\")), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      marginRight: '5px'\n    },\n    className: \"heading-4 font-thin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Have an account?\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    medium: true,\n    blue: true,\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Log in\")))), /*#__PURE__*/React.createElement(ViewOnGithubButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, fullName, username, password) => dispatch(signUpStart(email, fullName, username, password))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  fetching: selectFetching\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpCard);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/SignUpCard/SignUpCard.js"],"names":["React","Fragment","connect","createStructuredSelector","Link","useFormik","signUpStart","selectError","selectFetching","validateEmail","validateFullName","validateUsername","validatePassword","Button","TextButton","Divider","Card","FormInput","ViewOnGithubButton","GithubLoginButton","SignUpCard","error","fetching","validate","values","errors","emailError","email","fullNameError","fullName","usernameError","username","passwordError","password","formik","initialValues","onSubmit","fontSize","display","alignItems","justifyContent","width","color","handleSubmit","getFieldProps","touched","Object","keys","length","isValid","submitCount","padding","marginRight","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gCAA5C;AAEA,SACEC,aADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,gBAJF,QAKO,wBALP;AAOA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEd,EAAAA,WAAF;AAAee,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACvD,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,UAAU,GAAGjB,aAAa,CAACe,MAAM,CAACG,KAAR,CAAhC;AACA,QAAID,UAAJ,EAAgBD,MAAM,CAACE,KAAP,GAAeD,UAAf;AAEhB,UAAME,aAAa,GAAGlB,gBAAgB,CAACc,MAAM,CAACK,QAAR,CAAtC;AACA,QAAID,aAAJ,EAAmBH,MAAM,CAACI,QAAP,GAAkBD,aAAlB;AAEnB,UAAME,aAAa,GAAGnB,gBAAgB,CAACa,MAAM,CAACO,QAAR,CAAtC;AACA,QAAID,aAAJ,EAAmBL,MAAM,CAACM,QAAP,GAAkBD,aAAlB;AAEnB,UAAME,aAAa,GAAGpB,gBAAgB,CAACY,MAAM,CAACS,QAAR,CAAtC;AACA,QAAID,aAAJ,EAAmBP,MAAM,CAACQ,QAAP,GAAkBD,aAAlB;AACnB,WAAOP,MAAP;AACD,GAdD;;AAgBA,QAAMS,MAAM,GAAG7B,SAAS,CAAC;AACvB8B,IAAAA,aAAa,EAAE;AACbR,MAAAA,KAAK,EAAE,EADM;AAEbE,MAAAA,QAAQ,EAAE,EAFG;AAGbE,MAAAA,QAAQ,EAAE,EAHG;AAIbE,MAAAA,QAAQ,EAAE;AAJG,KADQ;AAOvBV,IAAAA,QAPuB;AAQvBa,IAAAA,QAAQ,EAAGZ,MAAD,IACRlB,WAAW,CACTkB,MAAM,CAACG,KADE,EAETH,MAAM,CAACK,QAFE,EAGTL,MAAM,CAACO,QAHE,EAITP,MAAM,CAACS,QAJE;AATU,GAAD,CAAxB;AAiBA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE;AAAZ,KADT;AAEE,IAAA,SAAS,EAAC,kCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAFF,eAQE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,KAAK,EAAE,MAJF;AAKLC,MAAAA,KAAK,EAAE;AALF,KADT;AAQE,IAAA,MAAM,MARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAkBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBF,eAmBE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,QAAQ,EAAER,MAAM,CAACS,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,UAAU,EAAET,MAAM,CAACU,aAAP,CAAqB,OAArB,CAFd;AAGE,IAAA,KAAK,EAAEV,MAAM,CAACW,OAAP,CAAelB,KAAf,IAAwB,CAACO,MAAM,CAACT,MAAP,CAAcE,KAHhD;AAIE,IAAA,WAAW,EAAC,eAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,UAAU,EAAEO,MAAM,CAACU,aAAP,CAAqB,UAArB,CAFd;AAGE,IAAA,KAAK,EAAEV,MAAM,CAACW,OAAP,CAAehB,QAAf,IAA2B,CAACK,MAAM,CAACT,MAAP,CAAcI,QAHnD;AAIE,IAAA,WAAW,EAAC,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,UAAU,EAAEK,MAAM,CAACU,aAAP,CAAqB,UAArB,CAFd;AAGE,IAAA,KAAK,EAAEV,MAAM,CAACW,OAAP,CAAed,QAAf,IAA2B,CAACG,MAAM,CAACT,MAAP,CAAcM,QAHnD;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAmBE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,UAAU,EAAEG,MAAM,CAACU,aAAP,CAAqB,UAArB,CAFd;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEV,MAAM,CAACW,OAAP,CAAeZ,QAAf,IAA2B,CAACC,MAAM,CAACT,MAAP,CAAcQ,QAJnD;AAKE,IAAA,IAAI,EAAC,UALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,eA0BE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEX,QADX;AAEE,IAAA,QAAQ,EACNwB,MAAM,CAACC,IAAP,CAAYb,MAAM,CAACW,OAAnB,EAA4BG,MAA5B,KAAuC,CAAvC,GAA2C,IAA3C,GAAkD,CAACd,MAAM,CAACe,OAH9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1BF,eAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CAnBF,eAuDE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,KAAK,GACFA,KADE,GAEFa,MAAM,CAACgB,WAAP,GAAqB,CAArB,IAA0BJ,MAAM,CAACtB,MAAP,CAAcU,MAAM,CAACT,MAArB,EAA6B,CAA7B,CAHhC,CAvDF,eA4DE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sLA5DF,CADF,eAmEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAE,MADJ;AAELE,MAAAA,cAAc,EAAE,QAFX;AAGLD,MAAAA,UAAU,EAAE,QAHP;AAILY,MAAAA,OAAO,EAAE;AAJJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAX;AAAmC,IAAA,SAAS,EAAC,qBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,eAWE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,MAAlB;AAAmB,IAAA,IAAI,MAAvB;AAAwB,IAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CADF,CAnEF,eAsFE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtFF,CADF;AA0FD,CA5HD;;AA8HA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxChD,EAAAA,WAAW,EAAE,CAACqB,KAAD,EAAQE,QAAR,EAAkBE,QAAlB,EAA4BE,QAA5B,KACXqB,QAAQ,CAAChD,WAAW,CAACqB,KAAD,EAAQE,QAAR,EAAkBE,QAAlB,EAA4BE,QAA5B,CAAZ;AAF8B,CAAf,CAA3B;;AAKA,MAAMsB,eAAe,GAAGpD,wBAAwB,CAAC;AAC/CkB,EAAAA,KAAK,EAAEd,WADwC;AAE/Ce,EAAAA,QAAQ,EAAEd;AAFqC,CAAD,CAAhD;AAKA,eAAeN,OAAO,CAACqD,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjC,UAA7C,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\n\nimport { signUpStart } from '../../redux/user/userActions';\nimport { selectError, selectFetching } from '../../redux/user/userSelectors';\n\nimport {\n  validateEmail,\n  validateFullName,\n  validateUsername,\n  validatePassword,\n} from '../../utils/validation';\n\nimport Button from '../Button/Button';\nimport TextButton from '../Button/TextButton/TextButton';\nimport Divider from '../Divider/Divider';\nimport Card from '../Card/Card';\nimport FormInput from '../FormInput/FormInput';\nimport ViewOnGithubButton from '../ViewOnGithubButton/ViewOnGithubButton';\nimport GithubLoginButton from '../GithubLoginButton/GithubLoginButton';\n\nconst SignUpCard = ({ signUpStart, error, fetching }) => {\n  const validate = (values) => {\n    const errors = {};\n    const emailError = validateEmail(values.email);\n    if (emailError) errors.email = emailError;\n\n    const fullNameError = validateFullName(values.fullName);\n    if (fullNameError) errors.fullName = fullNameError;\n\n    const usernameError = validateUsername(values.username);\n    if (usernameError) errors.username = usernameError;\n\n    const passwordError = validatePassword(values.password);\n    if (passwordError) errors.password = passwordError;\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      fullName: '',\n      username: '',\n      password: '',\n    },\n    validate,\n    onSubmit: (values) =>\n      signUpStart(\n        values.email,\n        values.fullName,\n        values.username,\n        values.password\n      ),\n  });\n\n  return (\n    <Fragment>\n      <Card className=\"form-card\">\n        <h1 className=\"heading-logo text-center\">Instaclone</h1>\n        <h2\n          style={{ fontSize: '1.7rem' }}\n          className=\"heading-2 color-grey text-center\"\n        >\n          Sign up to see photos and videos from your friends.\n        </h2>\n        <GithubLoginButton\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            color: 'white',\n          }}\n          button\n        />\n        <Divider>OR</Divider>\n        <form className=\"form-card__form\" onSubmit={formik.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            fieldProps={formik.getFieldProps('email')}\n            valid={formik.touched.email && !formik.errors.email}\n            placeholder=\"Email address\"\n          />\n          <FormInput\n            name=\"fullName\"\n            fieldProps={formik.getFieldProps('fullName')}\n            valid={formik.touched.fullName && !formik.errors.fullName}\n            placeholder=\"Full Name\"\n          />\n          <FormInput\n            name=\"username\"\n            fieldProps={formik.getFieldProps('username')}\n            valid={formik.touched.username && !formik.errors.username}\n            placeholder=\"Username\"\n          />\n          <FormInput\n            name=\"password\"\n            fieldProps={formik.getFieldProps('password')}\n            placeholder=\"Password\"\n            valid={formik.touched.password && !formik.errors.password}\n            type=\"password\"\n          />\n          <Button\n            loading={fetching}\n            disabled={\n              Object.keys(formik.touched).length === 0 ? true : !formik.isValid\n            }\n          >\n            Sign Up\n          </Button>\n          <p></p>\n        </form>\n        <p className=\"error\">\n          {error\n            ? error\n            : formik.submitCount > 0 && Object.values(formik.errors)[0]}\n        </p>\n        <p className=\"heading-5 color-grey\">\n          By signing up, you agree to our Terms . Learn how we collect, use and\n          share your data in our Data Policy and how we use cookies and similar\n          technology in our Cookies Policy .\n        </p>\n      </Card>\n      <Card>\n        <section\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '2rem',\n          }}\n        >\n          <h4 style={{ marginRight: '5px' }} className=\"heading-4 font-thin\">\n            Have an account?\n          </h4>\n          <Link to=\"/login\">\n            <TextButton medium blue bold>\n              Log in\n            </TextButton>\n          </Link>\n        </section>\n      </Card>\n      <ViewOnGithubButton />\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (email, fullName, username, password) =>\n    dispatch(signUpStart(email, fullName, username, password)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  fetching: selectFetching,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpCard);\n"]},"metadata":{},"sourceType":"module"}