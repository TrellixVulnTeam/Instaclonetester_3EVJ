{"ast":null,"code":"import alertTypes from './alertTypes';\nexport const hideAlert = () => ({\n  type: alertTypes.HIDE_ALERT\n});\nexport const showAlert = (text, onClick = null) => (dispatch, getState) => {\n  const state = getState();\n  clearTimeout(state.alert.timeoutId);\n  const timeout = setTimeout(() => {\n    dispatch(hideAlert());\n    dispatch({\n      type: alertTypes.SET_ALERT_TIMEOUT_ID,\n      payload: null\n    });\n  }, 5000);\n  dispatch({\n    type: alertTypes.SET_ALERT_TIMEOUT_ID,\n    payload: timeout\n  }); // If there is an alert already present,\n  // disable it and allow the animation to finish\n  // before toggling the new one\n\n  if (state.alert.showAlert) {\n    dispatch(hideAlert());\n    setTimeout(() => {\n      dispatch({\n        type: alertTypes.SHOW_ALERT,\n        payload: {\n          text,\n          onClick\n        }\n      });\n    }, 500);\n  } else {\n    dispatch({\n      type: alertTypes.SHOW_ALERT,\n      payload: {\n        text,\n        onClick\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/redux/alert/alertActions.js"],"names":["alertTypes","hideAlert","type","HIDE_ALERT","showAlert","text","onClick","dispatch","getState","state","clearTimeout","alert","timeoutId","timeout","setTimeout","SET_ALERT_TIMEOUT_ID","payload","SHOW_ALERT"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAO;AAC9BC,EAAAA,IAAI,EAAEF,UAAU,CAACG;AADa,CAAP,CAAlB;AAIP,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,OAAO,GAAG,IAAjB,KAA0B,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACzE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACAE,EAAAA,YAAY,CAACD,KAAK,CAACE,KAAN,CAAYC,SAAb,CAAZ;AACA,QAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BP,IAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;AACAM,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEF,UAAU,CAACe,oBAAnB;AAAyCC,MAAAA,OAAO,EAAE;AAAlD,KAAD,CAAR;AACD,GAHyB,EAGvB,IAHuB,CAA1B;AAIAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEF,UAAU,CAACe,oBAAnB;AAAyCC,IAAAA,OAAO,EAAEH;AAAlD,GAAD,CAAR,CAPyE,CAQzE;AACA;AACA;;AACA,MAAIJ,KAAK,CAACE,KAAN,CAAYP,SAAhB,EAA2B;AACzBG,IAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;AACAa,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEF,UAAU,CAACiB,UADV;AAEPD,QAAAA,OAAO,EAAE;AAAEX,UAAAA,IAAF;AAAQC,UAAAA;AAAR;AAFF,OAAD,CAAR;AAID,KALS,EAKP,GALO,CAAV;AAMD,GARD,MAQO;AACLC,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAEF,UAAU,CAACiB,UADV;AAEPD,MAAAA,OAAO,EAAE;AAAEX,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAFF,KAAD,CAAR;AAID;AACF,CAzBM","sourcesContent":["import alertTypes from './alertTypes';\n\nexport const hideAlert = () => ({\n  type: alertTypes.HIDE_ALERT,\n});\n\nexport const showAlert = (text, onClick = null) => (dispatch, getState) => {\n  const state = getState();\n  clearTimeout(state.alert.timeoutId);\n  const timeout = setTimeout(() => {\n    dispatch(hideAlert());\n    dispatch({ type: alertTypes.SET_ALERT_TIMEOUT_ID, payload: null });\n  }, 5000);\n  dispatch({ type: alertTypes.SET_ALERT_TIMEOUT_ID, payload: timeout });\n  // If there is an alert already present,\n  // disable it and allow the animation to finish\n  // before toggling the new one\n  if (state.alert.showAlert) {\n    dispatch(hideAlert());\n    setTimeout(() => {\n      dispatch({\n        type: alertTypes.SHOW_ALERT,\n        payload: { text, onClick },\n      });\n    }, 500);\n  } else {\n    dispatch({\n      type: alertTypes.SHOW_ALERT,\n      payload: { text, onClick },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}