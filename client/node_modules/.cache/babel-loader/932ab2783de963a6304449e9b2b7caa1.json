{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/App/App.js\";\nimport React, { useEffect, Fragment, Suspense, lazy } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTransition } from 'react-spring';\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\nimport { signInStart } from '../../redux/user/userActions';\nimport { connectSocket } from '../../redux/socket/socketActions';\nimport { fetchNotificationsStart } from '../../redux/notification/notificationActions';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Header from '../Header/Header';\nimport Modal from '../../components/Modal/Modal';\nimport Alert from '../../components/Alert/Alert';\nimport Footer from '../../components/Footer/Footer';\nimport MobileNav from '../../components/MobileNav/MobileNav';\nimport LoadingPage from '../../pages/LoadingPage/LoadingPage';\nconst ProfilePage = lazy(() => import('../../pages/ProfilePage/ProfilePage'));\nconst PostPage = lazy(() => import('../../pages/PostPage/PostPage'));\nconst ConfirmationPage = lazy(() => import('../../pages/ConfirmationPage/ConfirmationPage'));\nconst SettingsPage = lazy(() => import('../../pages/SettingsPage/SettingsPage'));\nconst ActivityPage = lazy(() => import('../../pages/ActivityPage/ActivityPage'));\nconst LoginPage = lazy(() => import('../../pages/LoginPage/LoginPage'));\nconst SignUpPage = lazy(() => import('../../pages/SignUpPage/SignUpPage'));\nconst HomePage = lazy(() => import('../../pages/HomePage/HomePage'));\nconst NewPostPage = lazy(() => import('../../pages/NewPostPage/NewPostPage'));\nconst ExplorePage = lazy(() => import('../../pages/ExplorePage/ExplorePage'));\nconst NotFoundPage = lazy(() => import('../../pages/NotFoundPage/NotFoundPage'));\nexport function UnconnectedApp({\n  signInStart,\n  modal,\n  alert,\n  currentUser,\n  connectSocket,\n  fetchNotificationsStart\n}) {\n  const token = localStorage.getItem('token');\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory();\n  useEffect(() => {\n    if (token) {\n      signInStart(null, null, token);\n      connectSocket();\n      fetchNotificationsStart(token);\n    }\n  }, [signInStart, connectSocket, fetchNotificationsStart, token]);\n\n  const renderModals = () => {\n    if (modal.modals.length > 0) {\n      // Disable scrolling on the body while a modal is active\n      document.querySelector('body').setAttribute('style', 'overflow: hidden;');\n      return modal.modals.map((modal, idx) => /*#__PURE__*/React.createElement(Modal, Object.assign({\n        key: idx,\n        component: modal.component\n      }, modal.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      })));\n    } else {\n      document.querySelector('body').setAttribute('style', '');\n    }\n  };\n\n  const transitions = useTransition(alert.showAlert, null, {\n    from: {\n      transform: 'translateY(4rem)'\n    },\n    enter: {\n      transform: 'translateY(0rem)'\n    },\n    leave: {\n      transform: 'translateY(4rem)'\n    },\n    config: {\n      tension: 500,\n      friction: 50\n    }\n  });\n\n  const renderApp = () => {\n    // Wait for authentication\n    if (!currentUser && token) {\n      return /*#__PURE__*/React.createElement(LoadingPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, pathname !== '/login' && pathname !== '/signup' && /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 61\n      }\n    }), renderModals(), transitions.map(({\n      item,\n      props,\n      key\n    }) => item && /*#__PURE__*/React.createElement(Alert, {\n      key: key,\n      style: props,\n      onClick: alert.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, alert.text)), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: LoginPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      component: SignUpPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n      path: \"/settings\",\n      component: SettingsPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n      path: \"/activity\",\n      component: ActivityPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n      path: \"/new\",\n      component: NewPostPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n      path: \"/explore\",\n      component: ExplorePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/:username\",\n      component: ProfilePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/post/:postId\",\n      component: PostPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n      path: \"/confirm/:token\",\n      component: ConfirmationPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NotFoundPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    })), pathname !== '/' && /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }\n    }), pathname !== '/login' && pathname !== '/signup' && pathname !== '/new' && currentUser && /*#__PURE__*/React.createElement(MobileNav, {\n      currentUser: currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    \"data-test\": \"component-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, renderApp()));\n}\n\nconst mapStateToProps = state => ({\n  modal: state.modal,\n  alert: state.alert,\n  currentUser: selectCurrentUser(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signInStart: (usernameOrEmail, password, token) => dispatch(signInStart(usernameOrEmail, password, token)),\n  connectSocket: () => dispatch(connectSocket()),\n  fetchNotificationsStart: authToken => dispatch(fetchNotificationsStart(authToken))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UnconnectedApp);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/App/App.js"],"names":["React","useEffect","Fragment","Suspense","lazy","Switch","Route","useHistory","connect","useTransition","selectCurrentUser","signInStart","connectSocket","fetchNotificationsStart","ProtectedRoute","Header","Modal","Alert","Footer","MobileNav","LoadingPage","ProfilePage","PostPage","ConfirmationPage","SettingsPage","ActivityPage","LoginPage","SignUpPage","HomePage","NewPostPage","ExplorePage","NotFoundPage","UnconnectedApp","modal","alert","currentUser","token","localStorage","getItem","location","pathname","renderModals","modals","length","document","querySelector","setAttribute","map","idx","component","props","transitions","showAlert","from","transform","enter","leave","config","tension","friction","renderApp","item","key","onClick","text","mapStateToProps","state","mapDispatchToProps","dispatch","usernameOrEmail","password","authToken"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, Suspense, lazy } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTransition } from 'react-spring';\n\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\nimport { signInStart } from '../../redux/user/userActions';\nimport { connectSocket } from '../../redux/socket/socketActions';\nimport { fetchNotificationsStart } from '../../redux/notification/notificationActions';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Header from '../Header/Header';\nimport Modal from '../../components/Modal/Modal';\nimport Alert from '../../components/Alert/Alert';\nimport Footer from '../../components/Footer/Footer';\nimport MobileNav from '../../components/MobileNav/MobileNav';\n\nimport LoadingPage from '../../pages/LoadingPage/LoadingPage';\nconst ProfilePage = lazy(() => import('../../pages/ProfilePage/ProfilePage'));\nconst PostPage = lazy(() => import('../../pages/PostPage/PostPage'));\nconst ConfirmationPage = lazy(() =>\n  import('../../pages/ConfirmationPage/ConfirmationPage')\n);\nconst SettingsPage = lazy(() =>\n  import('../../pages/SettingsPage/SettingsPage')\n);\nconst ActivityPage = lazy(() =>\n  import('../../pages/ActivityPage/ActivityPage')\n);\nconst LoginPage = lazy(() => import('../../pages/LoginPage/LoginPage'));\nconst SignUpPage = lazy(() => import('../../pages/SignUpPage/SignUpPage'));\nconst HomePage = lazy(() => import('../../pages/HomePage/HomePage'));\nconst NewPostPage = lazy(() => import('../../pages/NewPostPage/NewPostPage'));\nconst ExplorePage = lazy(() => import('../../pages/ExplorePage/ExplorePage'));\nconst NotFoundPage = lazy(() =>\n  import('../../pages/NotFoundPage/NotFoundPage')\n);\n\nexport function UnconnectedApp({\n  signInStart,\n  modal,\n  alert,\n  currentUser,\n  connectSocket,\n  fetchNotificationsStart,\n}) {\n  const token = localStorage.getItem('token');\n  const {\n    location: { pathname },\n  } = useHistory();\n\n  useEffect(() => {\n    if (token) {\n      signInStart(null, null, token);\n      connectSocket();\n      fetchNotificationsStart(token);\n    }\n  }, [signInStart, connectSocket, fetchNotificationsStart, token]);\n\n  const renderModals = () => {\n    if (modal.modals.length > 0) {\n      // Disable scrolling on the body while a modal is active\n      document.querySelector('body').setAttribute('style', 'overflow: hidden;');\n      return modal.modals.map((modal, idx) => (\n        <Modal key={idx} component={modal.component} {...modal.props} />\n      ));\n    } else {\n      document.querySelector('body').setAttribute('style', '');\n    }\n  };\n\n  const transitions = useTransition(alert.showAlert, null, {\n    from: {\n      transform: 'translateY(4rem)',\n    },\n    enter: {\n      transform: 'translateY(0rem)',\n    },\n    leave: {\n      transform: 'translateY(4rem)',\n    },\n    config: {\n      tension: 500,\n      friction: 50,\n    },\n  });\n\n  const renderApp = () => {\n    // Wait for authentication\n    if (!currentUser && token) {\n      return <LoadingPage />;\n    }\n    return (\n      <Fragment>\n        {pathname !== '/login' && pathname !== '/signup' && <Header />}\n        {renderModals()}\n        {transitions.map(\n          ({ item, props, key }) =>\n            item && (\n              <Alert key={key} style={props} onClick={alert.onClick}>\n                {alert.text}\n              </Alert>\n            )\n        )}\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/signup\" component={SignUpPage} />\n          <ProtectedRoute exact path=\"/\" component={HomePage} />\n          <ProtectedRoute path=\"/settings\" component={SettingsPage} />\n          <ProtectedRoute path=\"/activity\" component={ActivityPage} />\n          <ProtectedRoute path=\"/new\" component={NewPostPage} />\n          <ProtectedRoute path=\"/explore\" component={ExplorePage} />\n          <Route exact path=\"/:username\" component={ProfilePage} />\n          <Route path=\"/post/:postId\" component={PostPage} />\n          <ProtectedRoute path=\"/confirm/:token\" component={ConfirmationPage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n        {pathname !== '/' && <Footer />}\n        {pathname !== '/login' &&\n          pathname !== '/signup' &&\n          pathname !== '/new' &&\n          currentUser && <MobileNav currentUser={currentUser} />}\n      </Fragment>\n    );\n  };\n\n  return (\n    <div className=\"app\" data-test=\"component-app\">\n      <Suspense fallback={<LoadingPage />}>{renderApp()}</Suspense>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  modal: state.modal,\n  alert: state.alert,\n  currentUser: selectCurrentUser(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  signInStart: (usernameOrEmail, password, token) =>\n    dispatch(signInStart(usernameOrEmail, password, token)),\n  connectSocket: () => dispatch(connectSocket()),\n  fetchNotificationsStart: (authToken) =>\n    dispatch(fetchNotificationsStart(authToken)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(UnconnectedApp);\n"]},"metadata":{},"sourceType":"module"}