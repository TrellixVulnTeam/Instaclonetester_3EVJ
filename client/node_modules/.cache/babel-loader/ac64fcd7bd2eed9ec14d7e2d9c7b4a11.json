{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/Header/Header.js\";\nimport React, { useState, memo, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\nimport { ReactComponent as LogoCamera } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/logo-camera.svg\";\nimport SearchBox from '../SearchBox/SearchBox';\nimport NewPostButton from '../NewPost/NewPostButton/NewPostButton';\nimport NotificationButton from '../Notification/NotificationButton/NotificationButton';\nimport Button from '../Button/Button';\nimport Icon from '../Icon/Icon';\nconst Header = memo(({\n  currentUser\n}) => {\n  const [shouldMinimizeHeader, setShouldMinimizeHeader] = useState(false);\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory(); // Shrink header height and remove logo on scroll\n\n  useScrollPositionThrottled(({\n    currentScrollPosition\n  }) => {\n    if (window.outerWidth > 600) {\n      setShouldMinimizeHeader(currentScrollPosition > 100);\n    }\n  });\n  const headerClassNames = classNames({\n    header: true,\n    'header--small': shouldMinimizeHeader\n  });\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: headerClassNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"header__logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__logo-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LogoCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__logo-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Instaclone\"))), /*#__PURE__*/React.createElement(SearchBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, currentUser ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/explore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: pathname === '/explore' ? 'compass' : 'compass-outline',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(NotificationButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: '/' + currentUser.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: pathname === '/' + currentUser.username ? 'person-circle' : 'person-circle-outline',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(NewPostButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: {\n      marginRight: '1rem'\n    },\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3 heading--button color-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"))))));\n});\nHeader.whyDidYouRender = true;\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/Header/Header.js"],"names":["React","useState","memo","Fragment","connect","createStructuredSelector","Link","classNames","useHistory","selectCurrentUser","useScrollPositionThrottled","SearchBox","NewPostButton","NotificationButton","Button","Icon","Header","currentUser","shouldMinimizeHeader","setShouldMinimizeHeader","location","pathname","currentScrollPosition","window","outerWidth","headerClassNames","header","username","marginRight","whyDidYouRender","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, memo, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\n\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\n\nimport { ReactComponent as LogoCamera } from '../../assets/svg/logo-camera.svg';\nimport SearchBox from '../SearchBox/SearchBox';\nimport NewPostButton from '../NewPost/NewPostButton/NewPostButton';\nimport NotificationButton from '../Notification/NotificationButton/NotificationButton';\nimport Button from '../Button/Button';\nimport Icon from '../Icon/Icon';\n\nconst Header = memo(({ currentUser }) => {\n  const [shouldMinimizeHeader, setShouldMinimizeHeader] = useState(false);\n  const {\n    location: { pathname },\n  } = useHistory();\n\n  // Shrink header height and remove logo on scroll\n  useScrollPositionThrottled(({ currentScrollPosition }) => {\n    if (window.outerWidth > 600) {\n      setShouldMinimizeHeader(currentScrollPosition > 100);\n    }\n  });\n\n  const headerClassNames = classNames({\n    header: true,\n    'header--small': shouldMinimizeHeader,\n  });\n\n  return (\n    <header className={headerClassNames}>\n      <div className=\"header__content\">\n        <Link to=\"/\" className=\"header__logo\">\n          <div className=\"header__logo-image\">\n            <LogoCamera />\n          </div>\n          <div className=\"header__logo-header\">\n            <h3 className=\"heading-logo\">Instaclone</h3>\n          </div>\n        </Link>\n        <SearchBox />\n        <div className=\"header__icons\">\n          {currentUser ? (\n            <Fragment>\n              <Link to=\"/explore\">\n                <Icon\n                  icon={pathname === '/explore' ? 'compass' : 'compass-outline'}\n                />\n              </Link>\n              <NotificationButton />\n              <Link to={'/' + currentUser.username}>\n                <Icon\n                  icon={\n                    pathname === '/' + currentUser.username\n                      ? 'person-circle'\n                      : 'person-circle-outline'\n                  }\n                />\n              </Link>\n              <NewPostButton />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Link style={{ marginRight: '1rem' }} to=\"/login\">\n                <Button>Log In</Button>\n              </Link>\n              <Link to=\"/signup\">\n                <h3 className=\"heading-3 heading--button color-blue\">\n                  Sign Up\n                </h3>\n              </Link>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n});\n\nHeader.whyDidYouRender = true;\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}