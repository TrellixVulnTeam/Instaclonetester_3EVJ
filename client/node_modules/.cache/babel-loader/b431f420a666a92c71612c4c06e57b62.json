{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/pages/ProfilePage/ProfilePage.js\";\nimport React, { useReducer, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { selectCurrentUser, selectToken } from '../../redux/user/userSelectors';\nimport { INITIAL_STATE, profileReducer } from './ProfilePageReducer';\nimport { showModal, hideModal } from '../../redux/modal/modalActions';\nimport { getUserProfile, followUser } from '../../services/profileService';\nimport { getPosts } from '../../services/postService';\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\nimport ProfileCategory from '../../components/ProfileCategory/ProfileCategory';\nimport PreviewImage from '../../components/PreviewImage/PreviewImage';\nimport Loader from '../../components/Loader/Loader';\nimport SkeletonLoader from '../../components/SkeletonLoader/SkeletonLoader';\nimport MobileHeader from '../../components/Header/MobileHeader/MobileHeader';\nimport SettingsButton from '../../components/SettingsButton/SettingsButton';\nimport LoginCard from '../../components/LoginCard/LoginCard';\nimport NotFoundPage from '../../pages/NotFoundPage/NotFoundPage';\nimport ProfileHeader from './ProfileHeader';\nimport EmptyProfile from './EmptyProfile';\n\nconst ProfilePage = ({\n  currentUser,\n  token,\n  showModal,\n  hideModal\n}) => {\n  const {\n    username\n  } = useParams();\n  const history = useHistory();\n  const [state, dispatch] = useReducer(profileReducer, INITIAL_STATE);\n\n  const follow = async () => {\n    if (!currentUser) {\n      return showModal({\n        children: /*#__PURE__*/React.createElement(LoginCard, {\n          onClick: () => hideModal('Card/Card'),\n          modal: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }),\n        style: {\n          gridColumn: 'center-start / center-end',\n          justifySelf: 'center',\n          width: '40rem'\n        }\n      }, 'Card/Card');\n    }\n\n    try {\n      dispatch({\n        type: 'FOLLOW_USER_START'\n      });\n      const response = await followUser(state.data.user._id, token);\n      dispatch({\n        type: 'FOLLOW_USER_SUCCESS',\n        payload: response.operation\n      });\n    } catch (err) {\n      dispatch({\n        type: 'FOLLOW_USER_FAILURE',\n        payload: err\n      });\n    }\n  };\n\n  useScrollPositionThrottled(async () => {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight && state.data.posts.length < state.data.postCount && !state.fetchingAdditionalPosts) {\n      try {\n        dispatch({\n          type: 'FETCH_ADDITIONAL_POSTS_START'\n        });\n        const posts = await getPosts(username, state.data.posts.length);\n        dispatch({\n          type: 'FETCH_ADDITIONAL_POSTS_SUCCESS'\n        });\n        dispatch({\n          type: 'ADD_POSTS',\n          payload: posts\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_ADDITIONAL_POSTS_FAILURE',\n          payload: err\n        });\n      }\n    }\n  }, null);\n  useEffect(() => {\n    document.title = `@${username} â€¢ Instaclone photos`;\n\n    (async function () {\n      try {\n        dispatch({\n          type: 'FETCH_PROFILE_START'\n        });\n        const profile = await getUserProfile(username, token);\n        dispatch({\n          type: 'FETCH_PROFILE_SUCCESS',\n          payload: profile\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_PROFILE_FAILURE',\n          payload: err\n        });\n      }\n    })();\n  }, [username, token]);\n\n  const handleClick = postId => {\n    if (window.outerWidth <= 600) {\n      history.push(`/post/${postId}`);\n    } else {\n      showModal({\n        postId,\n        avatar: state.data.avatar,\n        profileDispatch: dispatch\n      }, 'PostDialog/PostDialog');\n    }\n  };\n\n  const renderProfile = () => {\n    if (state.fetching) {\n      return /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (!state.fetching && state.data) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ProfileHeader, {\n        currentUser: currentUser,\n        data: state.data,\n        showModal: showModal,\n        token: token,\n        follow: follow,\n        loading: state.following,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ProfileCategory, {\n        category: \"POSTS\",\n        icon: \"apps-outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }), state.data.posts.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, state.data.posts.map((post, idx) => {\n        return /*#__PURE__*/React.createElement(PreviewImage, {\n          onClick: () => handleClick(post._id),\n          image: post.image,\n          likes: post.postVotes,\n          comments: post.comments,\n          filter: post.filter,\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }\n        });\n      }), state.fetchingAdditionalPosts && /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        animated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        animated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        animated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      })))) : /*#__PURE__*/React.createElement(EmptyProfile, {\n        currentUserProfile: currentUser && currentUser.username === username,\n        username: username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }));\n    }\n  };\n\n  return state.error ? /*#__PURE__*/React.createElement(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, currentUser && currentUser.username === username ? /*#__PURE__*/React.createElement(MobileHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SettingsButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, username), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(MobileHeader, {\n    backArrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, username), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"profile-page grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, renderProfile()));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: component => dispatch(hideModal(component))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/pages/ProfilePage/ProfilePage.js"],"names":["React","useReducer","useEffect","Fragment","connect","createStructuredSelector","useParams","useHistory","selectCurrentUser","selectToken","INITIAL_STATE","profileReducer","showModal","hideModal","getUserProfile","followUser","getPosts","useScrollPositionThrottled","ProfileCategory","PreviewImage","Loader","SkeletonLoader","MobileHeader","SettingsButton","LoginCard","NotFoundPage","ProfileHeader","EmptyProfile","ProfilePage","currentUser","token","username","history","state","dispatch","follow","children","style","gridColumn","justifySelf","width","type","response","data","user","_id","payload","operation","err","window","innerHeight","document","documentElement","scrollTop","offsetHeight","posts","length","postCount","fetchingAdditionalPosts","title","profile","handleClick","postId","outerWidth","push","avatar","profileDispatch","renderProfile","fetching","following","map","post","idx","image","postVotes","comments","filter","error","mapStateToProps","mapDispatchToProps","props","component"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { selectCurrentUser, selectToken } from '../../redux/user/userSelectors';\n\nimport { INITIAL_STATE, profileReducer } from './ProfilePageReducer';\nimport { showModal, hideModal } from '../../redux/modal/modalActions';\n\nimport { getUserProfile, followUser } from '../../services/profileService';\nimport { getPosts } from '../../services/postService';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\n\nimport ProfileCategory from '../../components/ProfileCategory/ProfileCategory';\nimport PreviewImage from '../../components/PreviewImage/PreviewImage';\nimport Loader from '../../components/Loader/Loader';\nimport SkeletonLoader from '../../components/SkeletonLoader/SkeletonLoader';\nimport MobileHeader from '../../components/Header/MobileHeader/MobileHeader';\nimport SettingsButton from '../../components/SettingsButton/SettingsButton';\nimport LoginCard from '../../components/LoginCard/LoginCard';\nimport NotFoundPage from '../../pages/NotFoundPage/NotFoundPage';\nimport ProfileHeader from './ProfileHeader';\nimport EmptyProfile from './EmptyProfile';\n\nconst ProfilePage = ({ currentUser, token, showModal, hideModal }) => {\n  const { username } = useParams();\n  const history = useHistory();\n  const [state, dispatch] = useReducer(profileReducer, INITIAL_STATE);\n\n  const follow = async () => {\n    if (!currentUser) {\n      return showModal(\n        {\n          children: <LoginCard onClick={() => hideModal('Card/Card')} modal />,\n          style: {\n            gridColumn: 'center-start / center-end',\n            justifySelf: 'center',\n            width: '40rem',\n          },\n        },\n        'Card/Card'\n      );\n    }\n    try {\n      dispatch({ type: 'FOLLOW_USER_START' });\n      const response = await followUser(state.data.user._id, token);\n      dispatch({\n        type: 'FOLLOW_USER_SUCCESS',\n        payload: response.operation,\n      });\n    } catch (err) {\n      dispatch({\n        type: 'FOLLOW_USER_FAILURE',\n        payload: err,\n      });\n    }\n  };\n\n  useScrollPositionThrottled(async () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight &&\n      state.data.posts.length < state.data.postCount &&\n      !state.fetchingAdditionalPosts\n    ) {\n      try {\n        dispatch({ type: 'FETCH_ADDITIONAL_POSTS_START' });\n        const posts = await getPosts(username, state.data.posts.length);\n        dispatch({ type: 'FETCH_ADDITIONAL_POSTS_SUCCESS' });\n        dispatch({ type: 'ADD_POSTS', payload: posts });\n      } catch (err) {\n        dispatch({ type: 'FETCH_ADDITIONAL_POSTS_FAILURE', payload: err });\n      }\n    }\n  }, null);\n\n  useEffect(() => {\n    document.title = `@${username} â€¢ Instaclone photos`;\n    (async function () {\n      try {\n        dispatch({ type: 'FETCH_PROFILE_START' });\n        const profile = await getUserProfile(username, token);\n        dispatch({ type: 'FETCH_PROFILE_SUCCESS', payload: profile });\n      } catch (err) {\n        dispatch({ type: 'FETCH_PROFILE_FAILURE', payload: err });\n      }\n    })();\n  }, [username, token]);\n\n  const handleClick = (postId) => {\n    if (window.outerWidth <= 600) {\n      history.push(`/post/${postId}`);\n    } else {\n      showModal(\n        {\n          postId,\n          avatar: state.data.avatar,\n          profileDispatch: dispatch,\n        },\n        'PostDialog/PostDialog'\n      );\n    }\n  };\n\n  const renderProfile = () => {\n    if (state.fetching) {\n      return <Loader />;\n    }\n    if (!state.fetching && state.data) {\n      return (\n        <Fragment>\n          <ProfileHeader\n            currentUser={currentUser}\n            data={state.data}\n            showModal={showModal}\n            token={token}\n            follow={follow}\n            loading={state.following}\n          />\n          <ProfileCategory category=\"POSTS\" icon=\"apps-outline\" />\n          {state.data.posts.length > 0 ? (\n            <div className=\"profile-images\">\n              {state.data.posts.map((post, idx) => {\n                return (\n                  <PreviewImage\n                    onClick={() => handleClick(post._id)}\n                    image={post.image}\n                    likes={post.postVotes}\n                    comments={post.comments}\n                    filter={post.filter}\n                    key={idx}\n                  />\n                );\n              })}\n              {state.fetchingAdditionalPosts && (\n                <Fragment>\n                  <div>\n                    <SkeletonLoader animated />\n                  </div>\n                  <div>\n                    <SkeletonLoader animated />\n                  </div>\n                  <div>\n                    <SkeletonLoader animated />\n                  </div>\n                </Fragment>\n              )}\n            </div>\n          ) : (\n            <EmptyProfile\n              currentUserProfile={\n                currentUser && currentUser.username === username\n              }\n              username={username}\n            />\n          )}\n        </Fragment>\n      );\n    }\n  };\n\n  return state.error ? (\n    <NotFoundPage />\n  ) : (\n    <Fragment>\n      {currentUser && currentUser.username === username ? (\n        <MobileHeader>\n          <SettingsButton />\n          <h3 className=\"heading-3\">{username}</h3>\n          <div></div>\n        </MobileHeader>\n      ) : (\n        <MobileHeader backArrow>\n          <h3 className=\"heading-3\">{username}</h3>\n          <div></div>\n        </MobileHeader>\n      )}\n      <main className=\"profile-page grid\">{renderProfile()}</main>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}