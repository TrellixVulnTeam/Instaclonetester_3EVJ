{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/NewPost/NewPostFilter/NewPostFilter.js\";\nimport React, { Fragment } from 'react';\nimport FilterSelector from '../../FilterSelector/FilterSelector';\nimport SkeletonLoader from '../../SkeletonLoader/SkeletonLoader';\n\nconst NewPostFilter = ({\n  previewImage,\n  setPreviewImage,\n  filters\n}) => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-post__preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-post__preview-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, previewImage.src ? /*#__PURE__*/React.createElement(\"img\", {\n    src: previewImage.src,\n    alt: \"Customize\",\n    style: {\n      width: '100%',\n      height: '100%',\n      objectFit: 'contain',\n      filter: previewImage.filter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(SkeletonLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(FilterSelector, {\n    setFilter: (filter, filterName) => setPreviewImage(previous => ({ ...previous,\n      filter,\n      filterName\n    })),\n    previewImage: previewImage.src,\n    filters: filters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default NewPostFilter;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/NewPost/NewPostFilter/NewPostFilter.js"],"names":["React","Fragment","FilterSelector","SkeletonLoader","NewPostFilter","previewImage","setPreviewImage","filters","src","width","height","objectFit","filter","filterName","previous"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,eAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAAgD;AACpE,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,CAACG,GAAb,gBACC;AACE,IAAA,GAAG,EAAEH,YAAY,CAACG,GADpB;AAEE,IAAA,GAAG,EAAC,WAFN;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,SAAS,EAAE,SAHN;AAILC,MAAAA,MAAM,EAAEP,YAAY,CAACO;AAJhB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAYC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF,CADF,eAmBE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CAACA,MAAD,EAASC,UAAT,KACTP,eAAe,CAAEQ,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAeF,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,KAAf,CAAD,CAFnB;AAIE,IAAA,YAAY,EAAER,YAAY,CAACG,GAJ7B;AAKE,IAAA,OAAO,EAAED,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AA6BD,CA9BD;;AAgCA,eAAeH,aAAf","sourcesContent":["import React, { Fragment } from 'react';\n\nimport FilterSelector from '../../FilterSelector/FilterSelector';\nimport SkeletonLoader from '../../SkeletonLoader/SkeletonLoader';\n\nconst NewPostFilter = ({ previewImage, setPreviewImage, filters }) => {\n  return (\n    <Fragment>\n      <div className=\"new-post__preview\">\n        <div className=\"new-post__preview-image-container\">\n          {previewImage.src ? (\n            <img\n              src={previewImage.src}\n              alt=\"Customize\"\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'contain',\n                filter: previewImage.filter,\n              }}\n            />\n          ) : (\n            <SkeletonLoader />\n          )}\n        </div>\n      </div>\n      <FilterSelector\n        setFilter={(filter, filterName) =>\n          setPreviewImage((previous) => ({ ...previous, filter, filterName }))\n        }\n        previewImage={previewImage.src}\n        filters={filters}\n      />\n    </Fragment>\n  );\n};\n\nexport default NewPostFilter;\n"]},"metadata":{},"sourceType":"module"}