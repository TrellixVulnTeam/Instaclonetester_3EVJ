{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/FilterSelector/FilterSelector.js\";\nimport React, { useRef, useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport Loader from '../Loader/Loader';\nimport SkeletonLoader from '../SkeletonLoader/SkeletonLoader';\n\nconst FilterSelector = ({\n  setFilter,\n  filters,\n  previewImage\n}) => {\n  const filterSelectorRef = useRef();\n  const [selectedFilter, setSelectedFilter] = useState('Normal');\n\n  const handleClick = (name, filter) => {\n    setSelectedFilter(name);\n    setFilter(filter, name);\n  };\n\n  const renderSkeleton = amount => {\n    const skeleton = [];\n\n    for (let i = 0; i < amount; i++) {\n      skeleton.push( /*#__PURE__*/React.createElement(\"li\", {\n        className: \"filter-selector__item\",\n        style: {\n          width: '12rem',\n          height: '8rem'\n        },\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        animated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return skeleton;\n  };\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    ref: filterSelectorRef,\n    className: \"filter-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, filters.length === 0 ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }) : previewImage ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames({\n      'filter-selector__item': true,\n      'filter-selector__item--active font-bold': selectedFilter === 'Normal'\n    }),\n    onClick: () => handleClick('Normal', ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"filter-selector__filter-name heading-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Normal\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: previewImage,\n    alt: \"Filter preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), filters.map(({\n    name,\n    filter\n  }, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames({\n      'filter-selector__item': true,\n      'filter-selector__item--active font-bold': selectedFilter === name\n    }),\n    onClick: () => handleClick(name, filter),\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"filter-selector__filter-name heading-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(\"img\", {\n    src: previewImage,\n    style: {\n      filter\n    },\n    alt: \"Filter preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })))) : renderSkeleton(10));\n};\n\nexport default FilterSelector;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/FilterSelector/FilterSelector.js"],"names":["React","useRef","useState","Fragment","classNames","Loader","SkeletonLoader","FilterSelector","setFilter","filters","previewImage","filterSelectorRef","selectedFilter","setSelectedFilter","handleClick","name","filter","renderSkeleton","amount","skeleton","i","push","width","height","length","map","idx"],"mappings":"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","sourcesContent":["import React, { useRef, useState, Fragment } from 'react';\nimport classNames from 'classnames';\n\nimport Loader from '../Loader/Loader';\nimport SkeletonLoader from '../SkeletonLoader/SkeletonLoader';\n\nconst FilterSelector = ({ setFilter, filters, previewImage }) => {\n  const filterSelectorRef = useRef();\n  const [selectedFilter, setSelectedFilter] = useState('Normal');\n\n  const handleClick = (name, filter) => {\n    setSelectedFilter(name);\n    setFilter(filter, name);\n  };\n\n  const renderSkeleton = (amount) => {\n    const skeleton = [];\n    for (let i = 0; i < amount; i++) {\n      skeleton.push(\n        <li\n          className=\"filter-selector__item\"\n          style={{ width: '12rem', height: '8rem' }}\n          key={i}\n        >\n          <SkeletonLoader animated />\n        </li>\n      );\n    }\n    return skeleton;\n  };\n\n  return (\n    <ul ref={filterSelectorRef} className=\"filter-selector\">\n      {filters.length === 0 ? (\n        <Loader />\n      ) : previewImage ? (\n        <Fragment>\n          <li\n            className={classNames({\n              'filter-selector__item': true,\n              'filter-selector__item--active font-bold':\n                selectedFilter === 'Normal',\n            })}\n            onClick={() => handleClick('Normal', '')}\n          >\n            <span className=\"filter-selector__filter-name heading-5\">\n              Normal\n            </span>\n            <img src={previewImage} alt=\"Filter preview\" />\n          </li>\n          {filters.map(({ name, filter }, idx) => (\n            <li\n              className={classNames({\n                'filter-selector__item': true,\n                'filter-selector__item--active font-bold':\n                  selectedFilter === name,\n              })}\n              onClick={() => handleClick(name, filter)}\n              key={idx}\n            >\n              <span className=\"filter-selector__filter-name heading-5\">\n                {name}\n              </span>\n              <img src={previewImage} style={{ filter }} alt=\"Filter preview\" />\n            </li>\n          ))}\n        </Fragment>\n      ) : (\n        renderSkeleton(10)\n      )}\n    </ul>\n  );\n};\n\nexport default FilterSelector;\n"]},"metadata":{},"sourceType":"module"}