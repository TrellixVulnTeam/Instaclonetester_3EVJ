{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/Button/FollowButton/FollowButton.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser, selectToken } from '../../../redux/user/userSelectors';\nimport { showModal } from '../../../redux/modal/modalActions';\nimport { showAlert } from '../../../redux/alert/alertActions';\nimport { followUser } from '../../../services/profileService';\nimport Button from '../Button';\nimport UnfollowPrompt from '../../UnfollowPrompt/UnfollowPrompt';\n\nconst FollowButton = ({\n  userId,\n  token,\n  currentUser,\n  showModal,\n  following,\n  username,\n  avatar,\n  showAlert,\n  style\n}) => {\n  const [isFollowing, setIsFollowing] = useState(following);\n  const [loading, setLoading] = useState(false);\n\n  const follow = async () => {\n    try {\n      setLoading(true);\n      await followUser(userId, token);\n\n      if (!isFollowing) {\n        setIsFollowing(true);\n      } else {\n        setIsFollowing(false);\n      }\n\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      showAlert('Could not follow the user.', () => follow());\n    }\n  };\n\n  if (username === currentUser.username) {\n    return /*#__PURE__*/React.createElement(Button, {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, \"Follow\");\n  }\n\n  if (isFollowing) {\n    return /*#__PURE__*/React.createElement(Button, {\n      style: style,\n      loading: loading,\n      onClick: () => showModal({\n        options: [{\n          warning: true,\n          text: 'Unfollow',\n          onClick: () => follow()\n        }],\n        children: /*#__PURE__*/React.createElement(UnfollowPrompt, {\n          avatar: avatar,\n          username: username,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        })\n      }, 'OptionsDialog/OptionsDialog'),\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"Following\");\n  }\n\n  return /*#__PURE__*/React.createElement(Button, {\n    style: style,\n    loading: loading,\n    onClick: () => follow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"Follow\");\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowButton);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/Button/FollowButton/FollowButton.js"],"names":["React","useState","connect","createStructuredSelector","selectCurrentUser","selectToken","showModal","showAlert","followUser","Button","UnfollowPrompt","FollowButton","userId","token","currentUser","following","username","avatar","style","isFollowing","setIsFollowing","loading","setLoading","follow","err","options","warning","text","onClick","children","mapStateToProps","mapDispatchToProps","dispatch","props","component"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  selectCurrentUser,\n  selectToken,\n} from '../../../redux/user/userSelectors';\nimport { showModal } from '../../../redux/modal/modalActions';\nimport { showAlert } from '../../../redux/alert/alertActions';\n\nimport { followUser } from '../../../services/profileService';\n\nimport Button from '../Button';\nimport UnfollowPrompt from '../../UnfollowPrompt/UnfollowPrompt';\n\nconst FollowButton = ({\n  userId,\n  token,\n  currentUser,\n  showModal,\n  following,\n  username,\n  avatar,\n  showAlert,\n  style,\n}) => {\n  const [isFollowing, setIsFollowing] = useState(following);\n  const [loading, setLoading] = useState(false);\n\n  const follow = async () => {\n    try {\n      setLoading(true);\n      await followUser(userId, token);\n      if (!isFollowing) {\n        setIsFollowing(true);\n      } else {\n        setIsFollowing(false);\n      }\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      showAlert('Could not follow the user.', () => follow());\n    }\n  };\n\n  if (username === currentUser.username) {\n    return <Button disabled>Follow</Button>;\n  }\n\n  if (isFollowing) {\n    return (\n      <Button\n        style={style}\n        loading={loading}\n        onClick={() =>\n          showModal(\n            {\n              options: [\n                {\n                  warning: true,\n                  text: 'Unfollow',\n                  onClick: () => follow(),\n                },\n              ],\n              children: <UnfollowPrompt avatar={avatar} username={username} />,\n            },\n            'OptionsDialog/OptionsDialog'\n          )\n        }\n        inverted\n      >\n        Following\n      </Button>\n    );\n  }\n  return (\n    <Button style={style} loading={loading} onClick={() => follow()}>\n      Follow\n    </Button>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowButton);\n"]},"metadata":{},"sourceType":"module"}