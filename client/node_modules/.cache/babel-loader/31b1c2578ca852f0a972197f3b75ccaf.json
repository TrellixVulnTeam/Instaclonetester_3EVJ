{"ast":null,"code":"import socketTypes from './socketTypes';\nimport { connect } from '../../services/socketService';\nimport { addNotification } from '../notification/notificationActions';\nimport { addPost, removePost } from '../feed/feedActions';\nexport const connectSocket = () => dispatch => {\n  const socket = connect();\n  dispatch({\n    type: socketTypes.CONNECT,\n    payload: socket\n  });\n  socket.on('newNotification', data => {\n    dispatch(addNotification(data));\n  });\n  socket.on('newPost', data => {\n    dispatch(addPost(data));\n  });\n  socket.on('deletePost', data => {\n    dispatch(removePost(data));\n  });\n};\nexport const disconnectSocket = () => ({\n  type: socketTypes.DISCONNECT\n});","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/redux/socket/socketActions.js"],"names":["socketTypes","connect","addNotification","addPost","removePost","connectSocket","dispatch","socket","type","CONNECT","payload","on","data","disconnectSocket","DISCONNECT"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,qBAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/C,QAAMC,MAAM,GAAGN,OAAO,EAAtB;AACAK,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAER,WAAW,CAACS,OAApB;AAA6BC,IAAAA,OAAO,EAAEH;AAAtC,GAAD,CAAR;AAEAA,EAAAA,MAAM,CAACI,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;AACrCN,IAAAA,QAAQ,CAACJ,eAAe,CAACU,IAAD,CAAhB,CAAR;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACI,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC7BN,IAAAA,QAAQ,CAACH,OAAO,CAACS,IAAD,CAAR,CAAR;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACI,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;AAChCN,IAAAA,QAAQ,CAACF,UAAU,CAACQ,IAAD,CAAX,CAAR;AACD,GAFD;AAGD,CAfM;AAiBP,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AACrCL,EAAAA,IAAI,EAAER,WAAW,CAACc;AADmB,CAAP,CAAzB","sourcesContent":["import socketTypes from './socketTypes';\nimport { connect } from '../../services/socketService';\nimport { addNotification } from '../notification/notificationActions';\nimport { addPost, removePost } from '../feed/feedActions';\n\nexport const connectSocket = () => (dispatch) => {\n  const socket = connect();\n  dispatch({ type: socketTypes.CONNECT, payload: socket });\n\n  socket.on('newNotification', (data) => {\n    dispatch(addNotification(data));\n  });\n\n  socket.on('newPost', (data) => {\n    dispatch(addPost(data));\n  });\n\n  socket.on('deletePost', (data) => {\n    dispatch(removePost(data));\n  });\n};\n\nexport const disconnectSocket = () => ({\n  type: socketTypes.DISCONNECT,\n});\n"]},"metadata":{},"sourceType":"module"}