{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/NewPost/NewPost.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getPostFilters } from '../../services/postService';\nimport NewPostForm from './NewPostForm/NewPostForm';\nimport NewPostFilter from './NewPostFilter/NewPostFilter';\nimport MobileHeader from '../Header/MobileHeader/MobileHeader';\nimport TextButton from '../Button/TextButton/TextButton';\nimport Icon from '../Icon/Icon';\n\nconst NewPost = ({\n  file,\n  hide\n}) => {\n  const [previewImage, setPreviewImage] = useState({\n    src: null,\n    crop: {},\n    filter: null,\n    filterName: ''\n  });\n  const [activeSection, setActiveSection] = useState('filter');\n  const [filters, setFilters] = useState([]); // Load a preview image of the image to post\n\n  useEffect(() => {\n    if (file.type === 'image/png' || file.type === 'image/jpeg') {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = event => {\n        setPreviewImage(previous => ({ ...previous,\n          src: event.target.result\n        }));\n      };\n    } else {// Display error\n    }\n\n    return () => {\n      window.URL.revokeObjectURL(previewImage);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await getPostFilters();\n        setFilters(response.filters);\n      } catch (err) {\n        console.warn(err);\n      }\n    })();\n  }, []);\n\n  const renderSections = () => {\n    switch (activeSection) {\n      case 'details':\n        {\n          return /*#__PURE__*/React.createElement(NewPostForm, {\n            file: file,\n            previewImage: previewImage,\n            back: () => setActiveSection('filter'),\n            hide: () => hide(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }\n          });\n        }\n\n      default:\n        {\n          // return (\n          //   <NewPostEdit\n          //     previewImage={previewImage}\n          //     setPreviewImage={setPreviewImage}\n          //     file={file}\n          //   />\n          // );\n          return /*#__PURE__*/React.createElement(NewPostFilter, {\n            previewImage: previewImage,\n            setPreviewImage: setPreviewImage,\n            filters: filters,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 11\n            }\n          });\n        }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"new-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, activeSection !== 'details' && /*#__PURE__*/React.createElement(MobileHeader, {\n    show: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"close-outline\",\n    onClick: () => hide(),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"New Post\"), /*#__PURE__*/React.createElement(TextButton, {\n    bold: true,\n    blue: true,\n    style: {\n      fontSize: '1.5rem'\n    },\n    onClick: () => setActiveSection('details'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Next\")), renderSections(), activeSection !== 'details' && /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"new-post__nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: `new-post__nav-item ${activeSection === 'filter' && 'new-post__nav-item--active'}`,\n    onClick: () => setActiveSection('filter'),\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"heading-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Filter\")))));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/NewPost/NewPost.js"],"names":["React","useState","useEffect","getPostFilters","NewPostForm","NewPostFilter","MobileHeader","TextButton","Icon","NewPost","file","hide","previewImage","setPreviewImage","src","crop","filter","filterName","activeSection","setActiveSection","filters","setFilters","type","reader","FileReader","readAsDataURL","onload","event","previous","target","result","window","URL","revokeObjectURL","response","err","console","warn","renderSections","cursor","fontSize","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { getPostFilters } from '../../services/postService';\n\nimport NewPostForm from './NewPostForm/NewPostForm';\nimport NewPostFilter from './NewPostFilter/NewPostFilter';\nimport MobileHeader from '../Header/MobileHeader/MobileHeader';\nimport TextButton from '../Button/TextButton/TextButton';\nimport Icon from '../Icon/Icon';\n\nconst NewPost = ({ file, hide }) => {\n  const [previewImage, setPreviewImage] = useState({\n    src: null,\n    crop: {},\n    filter: null,\n    filterName: '',\n  });\n  const [activeSection, setActiveSection] = useState('filter');\n  const [filters, setFilters] = useState([]);\n\n  // Load a preview image of the image to post\n  useEffect(() => {\n    if (file.type === 'image/png' || file.type === 'image/jpeg') {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = (event) => {\n        setPreviewImage((previous) => ({\n          ...previous,\n          src: event.target.result,\n        }));\n      };\n    } else {\n      // Display error\n    }\n\n    return () => {\n      window.URL.revokeObjectURL(previewImage);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await getPostFilters();\n        setFilters(response.filters);\n      } catch (err) {\n        console.warn(err);\n      }\n    })();\n  }, []);\n\n  const renderSections = () => {\n    switch (activeSection) {\n      case 'details': {\n        return (\n          <NewPostForm\n            file={file}\n            previewImage={previewImage}\n            back={() => setActiveSection('filter')}\n            hide={() => hide()}\n          />\n        );\n      }\n      default: {\n        // return (\n        //   <NewPostEdit\n        //     previewImage={previewImage}\n        //     setPreviewImage={setPreviewImage}\n        //     file={file}\n        //   />\n        // );\n        return (\n          <NewPostFilter\n            previewImage={previewImage}\n            setPreviewImage={setPreviewImage}\n            filters={filters}\n          />\n        );\n      }\n    }\n  };\n\n  return (\n    <section className=\"new-post\">\n      {activeSection !== 'details' && (\n        <MobileHeader show>\n          <Icon\n            icon=\"close-outline\"\n            onClick={() => hide()}\n            style={{ cursor: 'pointer' }}\n          />\n          <h3 className=\"heading-3\">New Post</h3>\n          <TextButton\n            bold\n            blue\n            style={{ fontSize: '1.5rem' }}\n            onClick={() => setActiveSection('details')}\n          >\n            Next\n          </TextButton>\n        </MobileHeader>\n      )}\n      {renderSections()}\n      {activeSection !== 'details' && (\n        <nav className=\"new-post__nav\">\n          <ul>\n            <li\n              className={`new-post__nav-item ${\n                activeSection === 'filter' && 'new-post__nav-item--active'\n              }`}\n              onClick={() => setActiveSection('filter')}\n              style={{ width: '100%' }}\n            >\n              <h4 className=\"heading-4\">Filter</h4>\n            </li>\n            {/* <li\n              className={`new-post__nav-item ${\n                activeSection === 'edit' && 'new-post__nav-item--active'\n              }`}\n              onClick={() => setActiveSection('edit')}\n            >\n              <h4 className=\"heading-4\">Edit</h4>\n            </li> */}\n          </ul>\n        </nav>\n      )}\n    </section>\n  );\n};\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}