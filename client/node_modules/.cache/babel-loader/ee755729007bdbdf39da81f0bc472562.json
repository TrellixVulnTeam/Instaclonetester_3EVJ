{"ast":null,"code":"import axios from 'axios';\n/**\n * Retrieves a users notifications\n * @function retrieveNotifications\n * @param {string} authToken A user's auth token\n * @returns {array} Array of notifications\n */\n\nexport const retrieveNotifications = async authToken => {\n  try {\n    const response = await axios.get('/api/notification', {\n      headers: {\n        authorization: authToken\n      }\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data);\n  }\n};\n/**\n * Reads all the user's notifications\n * @function readNotifications\n * @param {string} authToken A user's auth token\n */\n\nexport const readNotifications = async authToken => {\n  try {\n    await axios.put('/api/notification', null, {\n      headers: {\n        authorization: authToken\n      }\n    });\n  } catch (err) {\n    throw new Error(err.response.data);\n  }\n};","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/services/notificationServices.js"],"names":["axios","retrieveNotifications","authToken","response","get","headers","authorization","data","err","Error","readNotifications","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;AAMA,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,SAAP,IAAqB;AACxD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,mBAAV,EAA+B;AACpDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEJ;AADR;AAD2C,KAA/B,CAAvB;AAKA,WAAOC,QAAQ,CAACI,IAAhB;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAG,CAACL,QAAJ,CAAaI,IAAvB,CAAN;AACD;AACF,CAXM;AAaP;;;;;;AAKA,OAAO,MAAMG,iBAAiB,GAAG,MAAOR,SAAP,IAAqB;AACpD,MAAI;AACF,UAAMF,KAAK,CAACW,GAAN,CAAU,mBAAV,EAA+B,IAA/B,EAAqC;AACzCN,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEJ;AADR;AADgC,KAArC,CAAN;AAKD,GAND,CAME,OAAOM,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAG,CAACL,QAAJ,CAAaI,IAAvB,CAAN;AACD;AACF,CAVM","sourcesContent":["import axios from 'axios';\n\n/**\n * Retrieves a users notifications\n * @function retrieveNotifications\n * @param {string} authToken A user's auth token\n * @returns {array} Array of notifications\n */\nexport const retrieveNotifications = async (authToken) => {\n  try {\n    const response = await axios.get('/api/notification', {\n      headers: {\n        authorization: authToken,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data);\n  }\n};\n\n/**\n * Reads all the user's notifications\n * @function readNotifications\n * @param {string} authToken A user's auth token\n */\nexport const readNotifications = async (authToken) => {\n  try {\n    await axios.put('/api/notification', null, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n  } catch (err) {\n    throw new Error(err.response.data);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}