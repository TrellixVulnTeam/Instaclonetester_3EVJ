{"ast":null,"code":"export const INITIAL_STATE = {\n  fetching: true,\n  fetchingAdditional: false,\n  error: false,\n  data: null\n};\nexport const usersListReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_START':\n      {\n        return { ...state,\n          fetching: true,\n          error: false\n        };\n      }\n\n    case 'FETCH_ADDITIONAL_START':\n      {\n        return { ...state,\n          fetching: false,\n          error: false,\n          fetchingAdditional: true\n        };\n      }\n\n    case 'FETCH_FAILURE':\n      {\n        return { ...state,\n          fetching: false,\n          fetchingAdditional: false,\n          error: action.payload\n        };\n      }\n\n    case 'FETCH_SUCCESS':\n      {\n        return { ...state,\n          fetching: false,\n          fetchingAdditional: false,\n          error: false,\n          data: action.payload\n        };\n      }\n\n    case 'ADD_USERS':\n      {\n        return { ...state,\n          fetchingAdditional: false,\n          data: [...state.data, ...action.payload]\n        };\n      }\n\n    default:\n      {\n        throw new Error(`Invalid action type '${action.type}' passed to followingOverviewReducer`);\n      }\n  }\n};","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/UsersList/usersListReducer.js"],"names":["INITIAL_STATE","fetching","fetchingAdditional","error","data","usersListReducer","state","action","type","payload","Error"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,IADiB;AAE3BC,EAAAA,kBAAkB,EAAE,KAFO;AAG3BC,EAAAA,KAAK,EAAE,KAHoB;AAI3BC,EAAAA,IAAI,EAAE;AAJqB,CAAtB;AAOP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,eAAO,EAAE,GAAGF,KAAL;AAAYL,UAAAA,QAAQ,EAAE,IAAtB;AAA4BE,UAAAA,KAAK,EAAE;AAAnC,SAAP;AACD;;AACD,SAAK,wBAAL;AAA+B;AAC7B,eAAO,EACL,GAAGG,KADE;AAELL,UAAAA,QAAQ,EAAE,KAFL;AAGLE,UAAAA,KAAK,EAAE,KAHF;AAILD,UAAAA,kBAAkB,EAAE;AAJf,SAAP;AAMD;;AACD,SAAK,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGI,KADE;AAELL,UAAAA,QAAQ,EAAE,KAFL;AAGLC,UAAAA,kBAAkB,EAAE,KAHf;AAILC,UAAAA,KAAK,EAAEI,MAAM,CAACE;AAJT,SAAP;AAMD;;AACD,SAAK,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGH,KADE;AAELL,UAAAA,QAAQ,EAAE,KAFL;AAGLC,UAAAA,kBAAkB,EAAE,KAHf;AAILC,UAAAA,KAAK,EAAE,KAJF;AAKLC,UAAAA,IAAI,EAAEG,MAAM,CAACE;AALR,SAAP;AAOD;;AACD,SAAK,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,kBAAkB,EAAE,KAFf;AAGLE,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgB,GAAGG,MAAM,CAACE,OAA1B;AAHD,SAAP;AAKD;;AACD;AAAS;AACP,cAAM,IAAIC,KAAJ,CACH,wBAAuBH,MAAM,CAACC,IAAK,sCADhC,CAAN;AAGD;AAxCH;AA0CD,CA3CM","sourcesContent":["export const INITIAL_STATE = {\n  fetching: true,\n  fetchingAdditional: false,\n  error: false,\n  data: null,\n};\n\nexport const usersListReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_START': {\n      return { ...state, fetching: true, error: false };\n    }\n    case 'FETCH_ADDITIONAL_START': {\n      return {\n        ...state,\n        fetching: false,\n        error: false,\n        fetchingAdditional: true,\n      };\n    }\n    case 'FETCH_FAILURE': {\n      return {\n        ...state,\n        fetching: false,\n        fetchingAdditional: false,\n        error: action.payload,\n      };\n    }\n    case 'FETCH_SUCCESS': {\n      return {\n        ...state,\n        fetching: false,\n        fetchingAdditional: false,\n        error: false,\n        data: action.payload,\n      };\n    }\n    case 'ADD_USERS': {\n      return {\n        ...state,\n        fetchingAdditional: false,\n        data: [...state.data, ...action.payload],\n      };\n    }\n    default: {\n      throw new Error(\n        `Invalid action type '${action.type}' passed to followingOverviewReducer`\n      );\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}