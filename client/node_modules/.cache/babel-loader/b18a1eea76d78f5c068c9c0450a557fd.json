{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/NewPost/NewPostButton/NewPostButton.js\";\nimport React, { useState, Fragment, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\nimport Icon from '../../Icon/Icon';\n\nconst NewPostButton = ({\n  showModal,\n  hideModal,\n  plusIcon,\n  children,\n  style\n}) => {\n  const [file, setFile] = useState(undefined);\n  const fileInputRef = useRef();\n  const history = useHistory();\n  useEffect(() => {\n    if (file) {\n      if (window.outerWidth > 600) {\n        showModal({\n          file,\n          hide: () => hideModal('NewPost/NewPost')\n        }, 'NewPost/NewPost');\n      } else {\n        history.push('/new', {\n          file\n        });\n      } // Resetting the input value so you are able to\n      // use the same file twice\n\n\n      fileInputRef.current.value = '';\n    }\n  }, [file, showModal, hideModal, history]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      cursor: 'pointer',\n      ...style\n    },\n    className: \"icon\",\n    htmlFor: \"file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, children ? children : /*#__PURE__*/React.createElement(Icon, {\n    icon: plusIcon ? 'add-circle-outline' : 'camera-outline',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-upload\",\n    type: \"file\",\n    style: {\n      display: 'none'\n    },\n    accept: \"image/*\" // Get the first selected file\n    ,\n    onChange: event => setFile(event.target.files[0]),\n    ref: fileInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: component => dispatch(hideModal(component))\n});\n\nexport default connect(null, mapDispatchToProps)(NewPostButton);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/NewPost/NewPostButton/NewPostButton.js"],"names":["React","useState","Fragment","useEffect","useRef","useHistory","connect","showModal","hideModal","Icon","NewPostButton","plusIcon","children","style","file","setFile","undefined","fileInputRef","history","window","outerWidth","hide","push","current","value","cursor","display","event","target","files","mapDispatchToProps","dispatch","props","component"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,mCAArC;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEH,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBG,EAAAA,QAAxB;AAAkCC,EAAAA,QAAlC;AAA4CC,EAAAA;AAA5C,CAAD,KAAyD;AAC7E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACe,SAAD,CAAhC;AACA,QAAMC,YAAY,GAAGb,MAAM,EAA3B;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAJ,EAAU;AACR,UAAIK,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AAC3Bb,QAAAA,SAAS,CACP;AAAEO,UAAAA,IAAF;AAAQO,UAAAA,IAAI,EAAE,MAAMb,SAAS,CAAC,iBAAD;AAA7B,SADO,EAEP,iBAFO,CAAT;AAID,OALD,MAKO;AACLU,QAAAA,OAAO,CAACI,IAAR,CAAa,MAAb,EAAqB;AAAER,UAAAA;AAAF,SAArB;AACD,OARO,CASR;AACA;;;AACAG,MAAAA,YAAY,CAACM,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;AACD;AACF,GAdQ,EAcN,CAACV,IAAD,EAAOP,SAAP,EAAkBC,SAAlB,EAA6BU,OAA7B,CAdM,CAAT;AAeA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE,SAAV;AAAqB,SAAGZ;AAAxB,KADT;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAC,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,QAAQ,GACPA,QADO,gBAGP,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,QAAQ,GAAG,oBAAH,GAA0B,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF,eAYE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE;AAAEe,MAAAA,OAAO,EAAE;AAAX,KAHT;AAIE,IAAA,MAAM,EAAC,SAJT,CAKE;AALF;AAME,IAAA,QAAQ,EAAGC,KAAD,IAAWZ,OAAO,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAN9B;AAOE,IAAA,GAAG,EAAEZ,YAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAwBD,CA5CD;;AA8CA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCxB,EAAAA,SAAS,EAAE,CAACyB,KAAD,EAAQC,SAAR,KAAsBF,QAAQ,CAACxB,SAAS,CAACyB,KAAD,EAAQC,SAAR,CAAV,CADD;AAExCzB,EAAAA,SAAS,EAAGyB,SAAD,IAAeF,QAAQ,CAACvB,SAAS,CAACyB,SAAD,CAAV;AAFM,CAAf,CAA3B;;AAKA,eAAe3B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCpB,aAAlC,CAAf","sourcesContent":["import React, { useState, Fragment, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\n\nimport Icon from '../../Icon/Icon';\n\nconst NewPostButton = ({ showModal, hideModal, plusIcon, children, style }) => {\n  const [file, setFile] = useState(undefined);\n  const fileInputRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (file) {\n      if (window.outerWidth > 600) {\n        showModal(\n          { file, hide: () => hideModal('NewPost/NewPost') },\n          'NewPost/NewPost'\n        );\n      } else {\n        history.push('/new', { file });\n      }\n      // Resetting the input value so you are able to\n      // use the same file twice\n      fileInputRef.current.value = '';\n    }\n  }, [file, showModal, hideModal, history]);\n  return (\n    <Fragment>\n      <label\n        style={{ cursor: 'pointer', ...style }}\n        className=\"icon\"\n        htmlFor=\"file-upload\"\n      >\n        {children ? (\n          children\n        ) : (\n          <Icon icon={plusIcon ? 'add-circle-outline' : 'camera-outline'} />\n        )}\n      </label>\n      <input\n        id=\"file-upload\"\n        type=\"file\"\n        style={{ display: 'none' }}\n        accept=\"image/*\"\n        // Get the first selected file\n        onChange={(event) => setFile(event.target.files[0])}\n        ref={fileInputRef}\n      />\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(null, mapDispatchToProps)(NewPostButton);\n"]},"metadata":{},"sourceType":"module"}