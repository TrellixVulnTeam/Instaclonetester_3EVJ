{"ast":null,"code":"import userTypes from './userTypes';\nexport const INITIAL_STATE = {\n  currentUser: null,\n  error: false,\n  fetching: false,\n  fetchingAvatar: false,\n  updatingProfile: false,\n  token: localStorage.getItem('token')\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userTypes.GITHUB_SIGN_IN_START:\n    case userTypes.SIGN_UP_START:\n    case userTypes.SIGN_IN_START:\n      {\n        return { ...state,\n          error: false,\n          fetching: true\n        };\n      }\n\n    case userTypes.GITHUB_SIGN_IN_SUCCESS:\n    case userTypes.SIGN_IN_SUCCESS:\n      {\n        return { ...state,\n          currentUser: action.payload.user,\n          error: false,\n          fetching: false,\n          token: action.payload.token\n        };\n      }\n\n    case userTypes.GITHUB_SIGN_IN_FAILURE:\n    case userTypes.SIGN_UP_FAILURE:\n    case userTypes.SIGN_IN_FAILURE:\n      {\n        return { ...state,\n          fetching: false,\n          error: action.payload\n        };\n      }\n\n    case userTypes.SIGN_OUT:\n      {\n        return { ...state,\n          currentUser: null,\n          token: null\n        };\n      }\n\n    case userTypes.BOOKMARK_POST:\n      {\n        const {\n          operation,\n          postId\n        } = action.payload;\n        let bookmarks = JSON.parse(JSON.stringify(state.currentUser.bookmarks));\n\n        if (operation === 'add') {\n          bookmarks.push({\n            post: postId\n          });\n        } else {\n          bookmarks = bookmarks.filter(bookmark => bookmark.post !== postId);\n        }\n\n        return { ...state,\n          currentUser: { ...state.currentUser,\n            bookmarks\n          }\n        };\n      }\n\n    case userTypes.REMOVE_AVATAR_START:\n    case userTypes.CHANGE_AVATAR_START:\n      {\n        return { ...state,\n          fetchingAvatar: true\n        };\n      }\n\n    case userTypes.CHANGE_AVATAR_SUCCESS:\n      {\n        return { ...state,\n          currentUser: { ...state.currentUser,\n            avatar: action.payload\n          },\n          fetchingAvatar: false\n        };\n      }\n\n    case userTypes.REMOVE_AVATAR_FAILURE:\n    case userTypes.CHANGE_AVATAR_FAILURE:\n      {\n        return { ...state,\n          fetchingAvatar: false,\n          error: action.payload\n        };\n      }\n\n    case userTypes.REMOVE_AVATAR_SUCCESS:\n      {\n        // Removing the avatar key from the currentUser object\n        const {\n          avatar,\n          ...additionalKeys\n        } = state.currentUser;\n        return { ...state,\n          currentUser: { ...additionalKeys\n          },\n          fetchingAvatar: false,\n          error: false\n        };\n      }\n\n    case userTypes.UPDATE_PROFILE_START:\n      {\n        return { ...state,\n          updatingProfile: true\n        };\n      }\n\n    case userTypes.UPDATE_PROFILE_SUCCESS:\n      {\n        return { ...state,\n          error: false,\n          updatingProfile: false,\n          currentUser: { ...state.currentUser,\n            ...action.payload\n          }\n        };\n      }\n\n    case userTypes.UPDATE_PROFILE_FAILURE:\n      {\n        return { ...state,\n          updatingProfile: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/redux/user/userReducer.js"],"names":["userTypes","INITIAL_STATE","currentUser","error","fetching","fetchingAvatar","updatingProfile","token","localStorage","getItem","userReducer","state","action","type","GITHUB_SIGN_IN_START","SIGN_UP_START","SIGN_IN_START","GITHUB_SIGN_IN_SUCCESS","SIGN_IN_SUCCESS","payload","user","GITHUB_SIGN_IN_FAILURE","SIGN_UP_FAILURE","SIGN_IN_FAILURE","SIGN_OUT","BOOKMARK_POST","operation","postId","bookmarks","JSON","parse","stringify","push","post","filter","bookmark","REMOVE_AVATAR_START","CHANGE_AVATAR_START","CHANGE_AVATAR_SUCCESS","avatar","REMOVE_AVATAR_FAILURE","CHANGE_AVATAR_FAILURE","REMOVE_AVATAR_SUCCESS","additionalKeys","UPDATE_PROFILE_START","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE"],"mappings":"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","sourcesContent":["import userTypes from './userTypes';\n\nexport const INITIAL_STATE = {\n  currentUser: null,\n  error: false,\n  fetching: false,\n  fetchingAvatar: false,\n  updatingProfile: false,\n  token: localStorage.getItem('token'),\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userTypes.GITHUB_SIGN_IN_START:\n    case userTypes.SIGN_UP_START:\n    case userTypes.SIGN_IN_START: {\n      return { ...state, error: false, fetching: true };\n    }\n    case userTypes.GITHUB_SIGN_IN_SUCCESS:\n    case userTypes.SIGN_IN_SUCCESS: {\n      return {\n        ...state,\n        currentUser: action.payload.user,\n        error: false,\n        fetching: false,\n        token: action.payload.token,\n      };\n    }\n    case userTypes.GITHUB_SIGN_IN_FAILURE:\n    case userTypes.SIGN_UP_FAILURE:\n    case userTypes.SIGN_IN_FAILURE: {\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    }\n    case userTypes.SIGN_OUT: {\n      return {\n        ...state,\n        currentUser: null,\n        token: null,\n      };\n    }\n    case userTypes.BOOKMARK_POST: {\n      const { operation, postId } = action.payload;\n      let bookmarks = JSON.parse(JSON.stringify(state.currentUser.bookmarks));\n      if (operation === 'add') {\n        bookmarks.push({ post: postId });\n      } else {\n        bookmarks = bookmarks.filter((bookmark) => bookmark.post !== postId);\n      }\n      return {\n        ...state,\n        currentUser: {\n          ...state.currentUser,\n          bookmarks,\n        },\n      };\n    }\n    case userTypes.REMOVE_AVATAR_START:\n    case userTypes.CHANGE_AVATAR_START: {\n      return { ...state, fetchingAvatar: true };\n    }\n    case userTypes.CHANGE_AVATAR_SUCCESS: {\n      return {\n        ...state,\n        currentUser: { ...state.currentUser, avatar: action.payload },\n        fetchingAvatar: false,\n      };\n    }\n    case userTypes.REMOVE_AVATAR_FAILURE:\n    case userTypes.CHANGE_AVATAR_FAILURE: {\n      return {\n        ...state,\n        fetchingAvatar: false,\n        error: action.payload,\n      };\n    }\n    case userTypes.REMOVE_AVATAR_SUCCESS: {\n      // Removing the avatar key from the currentUser object\n      const { avatar, ...additionalKeys } = state.currentUser;\n      return {\n        ...state,\n        currentUser: { ...additionalKeys },\n        fetchingAvatar: false,\n        error: false,\n      };\n    }\n    case userTypes.UPDATE_PROFILE_START: {\n      return {\n        ...state,\n        updatingProfile: true,\n      };\n    }\n    case userTypes.UPDATE_PROFILE_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        updatingProfile: false,\n        currentUser: { ...state.currentUser, ...action.payload },\n      };\n    }\n    case userTypes.UPDATE_PROFILE_FAILURE: {\n      return {\n        ...state,\n        updatingProfile: false,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}