{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/Icon/PulsatingIcon/PulsatingIcon.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTransition } from 'react-spring';\nimport Icon from '../Icon';\n\nconst PulsatingIcon = ({\n  toggle,\n  constantProps = {},\n  toggledProps,\n  elementRef\n}) => {\n  const transitions = useTransition(toggle, null, {\n    from: {\n      transform: 'scale(1.3)'\n    },\n    enter: {\n      transform: 'scale(1)'\n    },\n    leave: {\n      display: 'none'\n    },\n    config: {\n      mass: 1,\n      tension: 500,\n      friction: 20\n    },\n    // Prevent animating on initial render\n    immediate: !elementRef.current\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, transitions.map(({\n    item,\n    key,\n    props\n  }) => item ? /*#__PURE__*/React.createElement(Icon, Object.assign({}, constantProps, toggledProps[0], {\n    style: props,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Icon, Object.assign({}, constantProps, toggledProps[1], {\n    style: props,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n};\n\nPulsatingIcon.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n  constantProps: PropTypes.object,\n  toggledProps: PropTypes.arrayOf(PropTypes.object).isRequired,\n  elementRef: PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  }).isRequired\n};\nexport default PulsatingIcon;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/Icon/PulsatingIcon/PulsatingIcon.js"],"names":["React","Fragment","PropTypes","useTransition","Icon","PulsatingIcon","toggle","constantProps","toggledProps","elementRef","transitions","from","transform","enter","leave","display","config","mass","tension","friction","immediate","current","map","item","key","props","propTypes","bool","isRequired","object","arrayOf","shape","instanceOf","Element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,MADqB;AAErBC,EAAAA,aAAa,GAAG,EAFK;AAGrBC,EAAAA,YAHqB;AAIrBC,EAAAA;AAJqB,CAAD,KAKhB;AACJ,QAAMC,WAAW,GAAGP,aAAa,CAACG,MAAD,EAAS,IAAT,EAAe;AAC9CK,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADwC;AAE9CC,IAAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAFuC;AAG9CE,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAHuC;AAI9CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,GAFH;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAJsC;AAS9C;AACAC,IAAAA,SAAS,EAAE,CAACX,UAAU,CAACY;AAVuB,GAAf,CAAjC;AAaA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,WAAW,CAACY,GAAZ,CAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,GAAD,KACfF,IAAI,gBACF,oBAAC,IAAD,oBACMhB,aADN,EAEMC,YAAY,CAAC,CAAD,CAFlB;AAGE,IAAA,KAAK,EAAEiB,KAHT;AAIE,IAAA,GAAG,EAAED,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADE,gBAQF,oBAAC,IAAD,oBACMjB,aADN,EAEMC,YAAY,CAAC,CAAD,CAFlB;AAGE,IAAA,KAAK,EAAEiB,KAHT;AAIE,IAAA,GAAG,EAAED,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATH,CADH,CADF;AAqBD,CAxCD;;AA0CAnB,aAAa,CAACqB,SAAd,GAA0B;AACxBpB,EAAAA,MAAM,EAAEJ,SAAS,CAACyB,IAAV,CAAeC,UADC;AAExBrB,EAAAA,aAAa,EAAEL,SAAS,CAAC2B,MAFD;AAGxBrB,EAAAA,YAAY,EAAEN,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC2B,MAA5B,EAAoCD,UAH1B;AAIxBnB,EAAAA,UAAU,EAAEP,SAAS,CAAC6B,KAAV,CAAgB;AAAEV,IAAAA,OAAO,EAAEnB,SAAS,CAAC8B,UAAV,CAAqBC,OAArB;AAAX,GAAhB,EACTL;AALqB,CAA1B;AAQA,eAAevB,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTransition } from 'react-spring';\n\nimport Icon from '../Icon';\n\nconst PulsatingIcon = ({\n  toggle,\n  constantProps = {},\n  toggledProps,\n  elementRef\n}) => {\n  const transitions = useTransition(toggle, null, {\n    from: { transform: 'scale(1.3)' },\n    enter: { transform: 'scale(1)' },\n    leave: { display: 'none' },\n    config: {\n      mass: 1,\n      tension: 500,\n      friction: 20\n    },\n    // Prevent animating on initial render\n    immediate: !elementRef.current\n  });\n\n  return (\n    <Fragment>\n      {transitions.map(({ item, key, props }) =>\n        item ? (\n          <Icon\n            {...constantProps}\n            {...toggledProps[0]}\n            style={props}\n            key={key}\n          />\n        ) : (\n          <Icon\n            {...constantProps}\n            {...toggledProps[1]}\n            style={props}\n            key={key}\n          />\n        )\n      )}\n    </Fragment>\n  );\n};\n\nPulsatingIcon.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n  constantProps: PropTypes.object,\n  toggledProps: PropTypes.arrayOf(PropTypes.object).isRequired,\n  elementRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n    .isRequired\n};\n\nexport default PulsatingIcon;\n"]},"metadata":{},"sourceType":"module"}