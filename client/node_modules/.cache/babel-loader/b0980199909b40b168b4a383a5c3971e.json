{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/FormInput/FormInput.test.js\";\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport FormInput from './FormInput';\nimport { checkProps, findByTestAttribute } from '../../utils/test/testUtils';\nconst defaultProps = {\n  placeholder: 'sfds',\n  type: 'text',\n  onChange: jest.fn(),\n  required: true\n};\n/**\n * Factory function that returns a wrapped component\n * @function setup\n * @returns {ShallowWrapper}\n */\n\nexport const setup = (initialProps = {}) => {\n  const setupProps = { ...defaultProps,\n    ...initialProps\n  };\n  const wrapper = shallow( /*#__PURE__*/React.createElement(FormInput, Object.assign({}, setupProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 27\n    }\n  })));\n  return wrapper;\n};\ndescribe('render', () => {\n  test('renders without error', () => {\n    const wrapper = setup();\n    const component = findByTestAttribute(wrapper, 'component-input');\n    expect(component.exists()).toBeTruthy();\n  });\n});\ntest('does not throw error with expected props', () => {\n  const result = checkProps(FormInput, defaultProps);\n  expect(result).toBeUndefined();\n});","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/FormInput/FormInput.test.js"],"names":["React","shallow","FormInput","checkProps","findByTestAttribute","defaultProps","placeholder","type","onChange","jest","fn","required","setup","initialProps","setupProps","wrapper","describe","test","component","expect","exists","toBeTruthy","result","toBeUndefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,4BAAhD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,MADM;AAEnBC,EAAAA,IAAI,EAAE,MAFa;AAGnBC,EAAAA,QAAQ,EAAEC,IAAI,CAACC,EAAL,EAHS;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOA;;;;;;AAKA,OAAO,MAAMC,KAAK,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AAC1C,QAAMC,UAAU,GAAG,EAAE,GAAGT,YAAL;AAAmB,OAAGQ;AAAtB,GAAnB;AACA,QAAME,OAAO,GAAGd,OAAO,eAAC,oBAAC,SAAD,oBAAea,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,CAAvB;AACA,SAAOC,OAAP;AACD,CAJM;AAMPC,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,EAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,UAAMF,OAAO,GAAGH,KAAK,EAArB;AACA,UAAMM,SAAS,GAAGd,mBAAmB,CAACW,OAAD,EAAU,iBAAV,CAArC;AACAI,IAAAA,MAAM,CAACD,SAAS,CAACE,MAAV,EAAD,CAAN,CAA2BC,UAA3B;AACD,GAJG,CAAJ;AAKD,CANO,CAAR;AAQAJ,IAAI,CAAC,0CAAD,EAA6C,MAAM;AACrD,QAAMK,MAAM,GAAGnB,UAAU,CAACD,SAAD,EAAYG,YAAZ,CAAzB;AACAc,EAAAA,MAAM,CAACG,MAAD,CAAN,CAAeC,aAAf;AACD,CAHG,CAAJ","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport FormInput from './FormInput';\n\nimport { checkProps, findByTestAttribute } from '../../utils/test/testUtils';\n\nconst defaultProps = {\n  placeholder: 'sfds',\n  type: 'text',\n  onChange: jest.fn(),\n  required: true\n};\n\n/**\n * Factory function that returns a wrapped component\n * @function setup\n * @returns {ShallowWrapper}\n */\nexport const setup = (initialProps = {}) => {\n  const setupProps = { ...defaultProps, ...initialProps };\n  const wrapper = shallow(<FormInput {...setupProps} />);\n  return wrapper;\n};\n\ndescribe('render', () => {\n  test('renders without error', () => {\n    const wrapper = setup();\n    const component = findByTestAttribute(wrapper, 'component-input');\n    expect(component.exists()).toBeTruthy();\n  });\n});\n\ntest('does not throw error with expected props', () => {\n  const result = checkProps(FormInput, defaultProps);\n  expect(result).toBeUndefined();\n});\n"]},"metadata":{},"sourceType":"module"}