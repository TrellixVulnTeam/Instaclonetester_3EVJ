{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/Comment/CommentReply/CommentReply.js\";\nimport React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { formatDateDistance } from '../../../utils/timeUtils';\nimport { Link } from 'react-router-dom';\nimport Linkify from 'linkifyjs/react';\nimport * as linkify from 'linkifyjs';\nimport mention from 'linkifyjs/plugins/mention';\nimport { linkifyOptions } from '../../../utils/linkifyUtils';\nimport Icon from '../../Icon/Icon';\nimport { voteCommentReply, deleteCommentReply } from '../../../services/commentService';\nimport Avatar from '../../Avatar/Avatar';\nimport PulsatingIcon from '../../Icon/PulsatingIcon/PulsatingIcon';\nmention(linkify);\n\nconst CommentReply = ({\n  comment,\n  parentComment,\n  post,\n  token,\n  currentUser,\n  dialogDispatch,\n  profileDispatch,\n  showModal,\n  hideModal,\n  showAlert\n}) => {\n  const commentReplyRef = useRef();\n  const [commentPostTime, setCommentPostTime] = useState(() => formatDateDistance(comment.date));\n  useEffect(() => {\n    const commentPostTimeInterval = setInterval(() => {\n      setCommentPostTime(formatDateDistance(comment.date));\n    }, 60000);\n    return () => clearInterval(commentPostTimeInterval);\n  }, [setCommentPostTime, comment]);\n\n  const handleCommentReplyVote = async () => {\n    try {\n      dialogDispatch({\n        type: 'VOTE_COMMENT_REPLY',\n        payload: {\n          commentReplyId: comment._id,\n          currentUser\n        }\n      });\n      await voteCommentReply(comment._id, token);\n    } catch (err) {\n      showAlert('Could not vote on the comment.', () => handleCommentReplyVote());\n    }\n  };\n\n  const handleCommentReplyDelete = async () => {\n    try {\n      dialogDispatch({\n        type: 'REMOVE_COMMENT_REPLY',\n        payload: {\n          commentReplyId: comment._id,\n          parentCommentId: parentComment._id\n        }\n      });\n      profileDispatch && profileDispatch({\n        type: 'DECREMENT_POST_COMMENTS_COUNT',\n        payload: {\n          decrementCount: 1,\n          postId: post._id\n        }\n      });\n      await deleteCommentReply(comment._id, token);\n    } catch (err) {\n      showAlert(\"Could not get the comment's replies.\", () => handleCommentReplyDelete());\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '5rem'\n    },\n    className: \"comment\",\n    ref: commentReplyRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => hideModal('PostDialog'),\n    to: `/${comment.author.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    size: \"4rem\",\n    imageSrc: comment.author.avatar,\n    className: \"avatar--small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => hideModal('PostDialog'),\n    style: {\n      textDecoration: 'none',\n      color: 'currentColor',\n      marginRight: '5px'\n    },\n    to: `/${comment.author.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, comment.author.username)), /*#__PURE__*/React.createElement(Linkify, {\n    options: linkifyOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, comment.message)), currentUser && comment.author.username === currentUser.username ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => showModal({\n      options: [{\n        warning: true,\n        text: 'Delete',\n        onClick: () => handleCommentReplyDelete()\n      }]\n    }, 'OptionsDialog/OptionsDialog'),\n    className: \"comment__menu-dots\",\n    style: {\n      marginRight: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"icon--small icon--button color-grey\",\n    icon: \"ellipsis-horizontal\",\n    style: {\n      height: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading-5 color-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, commentPostTime), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, comment.commentReplyVotes.length > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading-5 color-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, comment.commentReplyVotes.length, ' ', comment.commentReplyVotes.length === 1 ? 'like' : 'likes'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => // Telling the PostDialogCommentForm that we want to reply to the parent comment\n    dialogDispatch({\n      type: 'SET_REPLYING',\n      payload: {\n        username: comment.author.username,\n        commentId: parentComment._id\n      }\n    }),\n    className: \"heading-5 heading--button color-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"reply\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, currentUser ? /*#__PURE__*/React.createElement(PulsatingIcon, {\n    toggle: !!comment.commentReplyVotes.find(vote => vote.author === currentUser._id),\n    constantProps: {\n      onClick: () => handleCommentReplyVote()\n    },\n    toggledProps: [{\n      icon: 'heart',\n      className: 'icon--tiny color-red'\n    }, {\n      icon: 'heart-outline',\n      className: 'icon--tiny'\n    }],\n    elementRef: commentReplyRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Icon, {\n    icon: \"heart-outline\",\n    className: \"icon--tiny\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default CommentReply;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/Comment/CommentReply/CommentReply.js"],"names":["React","useState","useRef","useEffect","Fragment","formatDateDistance","Link","Linkify","linkify","mention","linkifyOptions","Icon","voteCommentReply","deleteCommentReply","Avatar","PulsatingIcon","CommentReply","comment","parentComment","post","token","currentUser","dialogDispatch","profileDispatch","showModal","hideModal","showAlert","commentReplyRef","commentPostTime","setCommentPostTime","date","commentPostTimeInterval","setInterval","clearInterval","handleCommentReplyVote","type","payload","commentReplyId","_id","err","handleCommentReplyDelete","parentCommentId","decrementCount","postId","marginLeft","author","username","avatar","textDecoration","color","marginRight","message","options","warning","text","onClick","height","commentReplyVotes","length","commentId","find","vote","icon","className"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { formatDateDistance } from '../../../utils/timeUtils';\nimport { Link } from 'react-router-dom';\nimport Linkify from 'linkifyjs/react';\nimport * as linkify from 'linkifyjs';\nimport mention from 'linkifyjs/plugins/mention';\n\nimport { linkifyOptions } from '../../../utils/linkifyUtils';\n\nimport Icon from '../../Icon/Icon';\n\nimport {\n  voteCommentReply,\n  deleteCommentReply,\n} from '../../../services/commentService';\n\nimport Avatar from '../../Avatar/Avatar';\nimport PulsatingIcon from '../../Icon/PulsatingIcon/PulsatingIcon';\n\nmention(linkify);\n\nconst CommentReply = ({\n  comment,\n  parentComment,\n  post,\n  token,\n  currentUser,\n  dialogDispatch,\n  profileDispatch,\n  showModal,\n  hideModal,\n  showAlert,\n}) => {\n  const commentReplyRef = useRef();\n  const [commentPostTime, setCommentPostTime] = useState(() =>\n    formatDateDistance(comment.date)\n  );\n\n  useEffect(() => {\n    const commentPostTimeInterval = setInterval(() => {\n      setCommentPostTime(formatDateDistance(comment.date));\n    }, 60000);\n    return () => clearInterval(commentPostTimeInterval);\n  }, [setCommentPostTime, comment]);\n\n  const handleCommentReplyVote = async () => {\n    try {\n      dialogDispatch({\n        type: 'VOTE_COMMENT_REPLY',\n        payload: { commentReplyId: comment._id, currentUser },\n      });\n      await voteCommentReply(comment._id, token);\n    } catch (err) {\n      showAlert('Could not vote on the comment.', () =>\n        handleCommentReplyVote()\n      );\n    }\n  };\n\n  const handleCommentReplyDelete = async () => {\n    try {\n      dialogDispatch({\n        type: 'REMOVE_COMMENT_REPLY',\n        payload: {\n          commentReplyId: comment._id,\n          parentCommentId: parentComment._id,\n        },\n      });\n      profileDispatch &&\n        profileDispatch({\n          type: 'DECREMENT_POST_COMMENTS_COUNT',\n          payload: { decrementCount: 1, postId: post._id },\n        });\n      await deleteCommentReply(comment._id, token);\n    } catch (err) {\n      showAlert(\"Could not get the comment's replies.\", () =>\n        handleCommentReplyDelete()\n      );\n    }\n  };\n\n  return (\n    <div\n      style={{ marginLeft: '5rem' }}\n      className=\"comment\"\n      ref={commentReplyRef}\n    >\n      <Link\n        onClick={() => hideModal('PostDialog')}\n        to={`/${comment.author.username}`}\n      >\n        <Avatar\n          size=\"4rem\"\n          imageSrc={comment.author.avatar}\n          className=\"avatar--small\"\n        />\n      </Link>\n      <div className=\"comment__content\">\n        <p className=\"heading-4\">\n          <Link\n            onClick={() => hideModal('PostDialog')}\n            style={{\n              textDecoration: 'none',\n              color: 'currentColor',\n              marginRight: '5px',\n            }}\n            to={`/${comment.author.username}`}\n          >\n            <b>{comment.author.username}</b>\n          </Link>\n          <Linkify options={linkifyOptions}>{comment.message}</Linkify>\n        </p>\n        {currentUser && comment.author.username === currentUser.username ? (\n          <div\n            onClick={() =>\n              showModal(\n                {\n                  options: [\n                    {\n                      warning: true,\n                      text: 'Delete',\n                      onClick: () => handleCommentReplyDelete(),\n                    },\n                  ],\n                },\n                'OptionsDialog/OptionsDialog'\n              )\n            }\n            className=\"comment__menu-dots\"\n            style={{ marginRight: '0' }}\n          >\n            <Icon\n              className=\"icon--small icon--button color-grey\"\n              icon=\"ellipsis-horizontal\"\n              style={{ height: '3rem' }}\n            />\n          </div>\n        ) : null}\n        <div className=\"comment__stats\">\n          <p className=\"heading-5 color-light\">{commentPostTime}</p>\n          <Fragment>\n            {comment.commentReplyVotes.length > 0 && (\n              <p className=\"heading-5 color-light\">\n                {comment.commentReplyVotes.length}{' '}\n                {comment.commentReplyVotes.length === 1 ? 'like' : 'likes'}\n              </p>\n            )}\n            <button\n              onClick={() =>\n                // Telling the PostDialogCommentForm that we want to reply to the parent comment\n                dialogDispatch({\n                  type: 'SET_REPLYING',\n                  payload: {\n                    username: comment.author.username,\n                    commentId: parentComment._id,\n                  },\n                })\n              }\n              className=\"heading-5 heading--button color-light\"\n            >\n              reply\n            </button>\n          </Fragment>\n        </div>\n      </div>\n      <div className=\"comment__like\">\n        {currentUser ? (\n          <PulsatingIcon\n            toggle={\n              !!comment.commentReplyVotes.find(\n                (vote) => vote.author === currentUser._id\n              )\n            }\n            constantProps={{\n              onClick: () => handleCommentReplyVote(),\n            }}\n            toggledProps={[\n              { icon: 'heart', className: 'icon--tiny color-red' },\n              { icon: 'heart-outline', className: 'icon--tiny' },\n            ]}\n            elementRef={commentReplyRef}\n          />\n        ) : (\n          <Icon icon=\"heart-outline\" className=\"icon--tiny\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentReply;\n"]},"metadata":{},"sourceType":"module"}