{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/LoginCard/LoginCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\nimport { signInStart } from '../../redux/user/userActions';\nimport { selectError, selectFetching, selectCurrentUser } from '../../redux/user/userSelectors';\nimport Button from '../Button/Button';\nimport FormInput from '../FormInput/FormInput';\nimport Divider from '../Divider/Divider';\nimport TextButton from '../Button/TextButton/TextButton';\nimport ViewOnGithubButton from '../ViewOnGithubButton/ViewOnGithubButton';\nimport GithubLoginButton from '../GithubLoginButton/GithubLoginButton';\nimport Card from '../Card/Card';\n\nconst LoginCard = ({\n  signInStart,\n  error,\n  fetching,\n  currentUser,\n  onClick,\n  modal\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    signInStart(email, password);\n  };\n\n  currentUser && onClick();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-card-container\",\n    style: modal ? {\n      padding: '2rem'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"form-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading-logo text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Instaclone\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    className: \"form-card__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Username or email address\",\n    type: \"text\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Password\",\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: fetching,\n    loading: fetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(GithubLoginButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      padding: '1rem 0'\n    },\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, error), /*#__PURE__*/React.createElement(TextButton, {\n    style: {\n      marginTop: '1.5rem'\n    },\n    darkBlue: true,\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      marginRight: '5px'\n    },\n    className: \"heading-4 font-thin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Don't have an account?\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    onClick: () => onClick && onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    medium: true,\n    blue: true,\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Sign up\")))), /*#__PURE__*/React.createElement(ViewOnGithubButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n\nLoginCard.propTypes = {\n  signInStart: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signInStart: (email, password) => dispatch(signInStart(email, password))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  fetching: selectFetching,\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginCard);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/LoginCard/LoginCard.js"],"names":["React","useState","PropTypes","connect","createStructuredSelector","Link","signInStart","selectError","selectFetching","selectCurrentUser","Button","FormInput","Divider","TextButton","ViewOnGithubButton","GithubLoginButton","Card","LoginCard","error","fetching","currentUser","onClick","modal","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","padding","e","target","value","marginTop","display","justifyContent","alignItems","marginRight","propTypes","func","isRequired","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\n\nimport { signInStart } from '../../redux/user/userActions';\n\nimport {\n  selectError,\n  selectFetching,\n  selectCurrentUser,\n} from '../../redux/user/userSelectors';\n\nimport Button from '../Button/Button';\nimport FormInput from '../FormInput/FormInput';\nimport Divider from '../Divider/Divider';\nimport TextButton from '../Button/TextButton/TextButton';\nimport ViewOnGithubButton from '../ViewOnGithubButton/ViewOnGithubButton';\nimport GithubLoginButton from '../GithubLoginButton/GithubLoginButton';\nimport Card from '../Card/Card';\n\nconst LoginCard = ({\n  signInStart,\n  error,\n  fetching,\n  currentUser,\n  onClick,\n  modal,\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    signInStart(email, password);\n  };\n\n  currentUser && onClick();\n\n  return (\n    <div\n      className=\"login-card-container\"\n      style={\n        modal\n          ? {\n              padding: '2rem',\n            }\n          : {}\n      }\n    >\n      <Card className=\"form-card\">\n        <h1 className=\"heading-logo text-center\">Instaclone</h1>\n        <form\n          onSubmit={(event) => handleSubmit(event)}\n          className=\"form-card__form\"\n        >\n          <FormInput\n            placeholder=\"Username or email address\"\n            type=\"text\"\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <FormInput\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <Button disabled={fetching} loading={fetching}>\n            Log In\n          </Button>\n        </form>\n        <Divider>OR</Divider>\n        <GithubLoginButton />\n        {error && (\n          <p style={{ padding: '1rem 0' }} className=\"error\">\n            {error}\n          </p>\n        )}\n        <TextButton style={{ marginTop: '1.5rem' }} darkBlue small>\n          Forgot password?\n        </TextButton>\n      </Card>\n      <Card>\n        <section\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '2rem',\n          }}\n        >\n          <h4 style={{ marginRight: '5px' }} className=\"heading-4 font-thin\">\n            Don't have an account?\n          </h4>\n          <Link to=\"/signup\" onClick={() => onClick && onClick()}>\n            <TextButton medium blue bold>\n              Sign up\n            </TextButton>\n          </Link>\n        </section>\n      </Card>\n      <ViewOnGithubButton />\n    </div>\n  );\n};\n\nLoginCard.propTypes = {\n  signInStart: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signInStart: (email, password) => dispatch(signInStart(email, password)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  fetching: selectFetching,\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginCard);\n"]},"metadata":{},"sourceType":"module"}