{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/Modal/Modal.js\";\nimport React, { useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { hideModal } from '../../redux/modal/modalActions';\nconst Modal = memo(({\n  component,\n  hideModal,\n  ...additionalProps\n}) => {\n  const modalRoot = document.querySelector('#modal-root');\n  const el = document.createElement('div');\n\n  const Child = require(`../../components/${component}`).default;\n\n  el.className = 'modal grid';\n  useEffect(() => {\n    const hide = ({\n      target\n    }) => {\n      if (target === el || !el.contains(target)) {\n        hideModal(component);\n      }\n    };\n\n    el.addEventListener('mousedown', hide, false);\n    modalRoot.appendChild(el);\n    return () => {\n      el.removeEventListener('mousedown', hide, false);\n      modalRoot.removeChild(el);\n    };\n  }, [el, modalRoot, hideModal, component]);\n  return ReactDOM.createPortal( /*#__PURE__*/React.createElement(Child, Object.assign({\n    hide: () => hideModal(component)\n  }, additionalProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  })), el);\n});\nModal.whyDidYouRender = true;\nModal.propTypes = {\n  component: PropTypes.string.isRequired,\n  props: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => ({\n  hideModal: component => dispatch(hideModal(component))\n});\n\nexport default connect(null, mapDispatchToProps)(Modal);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/Modal/Modal.js"],"names":["React","useEffect","memo","connect","ReactDOM","PropTypes","hideModal","Modal","component","additionalProps","modalRoot","document","querySelector","el","createElement","Child","require","default","className","hide","target","contains","addEventListener","appendChild","removeEventListener","removeChild","createPortal","whyDidYouRender","propTypes","string","isRequired","props","object","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,gCAA1B;AAEA,MAAMC,KAAK,GAAGL,IAAI,CAAC,CAAC;AAAEM,EAAAA,SAAF;AAAaF,EAAAA,SAAb;AAAwB,KAAGG;AAA3B,CAAD,KAAkD;AACnE,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;AACA,QAAMC,EAAE,GAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAX;;AACA,QAAMC,KAAK,GAAGC,OAAO,CAAE,oBAAmBR,SAAU,EAA/B,CAAP,CAAyCS,OAAvD;;AACAJ,EAAAA,EAAE,CAACK,SAAH,GAAe,YAAf;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,IAAI,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAC3B,UAAIA,MAAM,KAAKP,EAAX,IAAiB,CAACA,EAAE,CAACQ,QAAH,CAAYD,MAAZ,CAAtB,EAA2C;AACzCd,QAAAA,SAAS,CAACE,SAAD,CAAT;AACD;AACF,KAJD;;AAKAK,IAAAA,EAAE,CAACS,gBAAH,CAAoB,WAApB,EAAiCH,IAAjC,EAAuC,KAAvC;AACAT,IAAAA,SAAS,CAACa,WAAV,CAAsBV,EAAtB;AAEA,WAAO,MAAM;AACXA,MAAAA,EAAE,CAACW,mBAAH,CAAuB,WAAvB,EAAoCL,IAApC,EAA0C,KAA1C;AACAT,MAAAA,SAAS,CAACe,WAAV,CAAsBZ,EAAtB;AACD,KAHD;AAID,GAbQ,EAaN,CAACA,EAAD,EAAKH,SAAL,EAAgBJ,SAAhB,EAA2BE,SAA3B,CAbM,CAAT;AAeA,SAAOJ,QAAQ,CAACsB,YAAT,eACL,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,MAAMpB,SAAS,CAACE,SAAD;AAA5B,KAA6CC,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,EAELI,EAFK,CAAP;AAID,CAzBiB,CAAlB;AA2BAN,KAAK,CAACoB,eAAN,GAAwB,IAAxB;AAEApB,KAAK,CAACqB,SAAN,GAAkB;AAChBpB,EAAAA,SAAS,EAAEH,SAAS,CAACwB,MAAV,CAAiBC,UADZ;AAEhBC,EAAAA,KAAK,EAAE1B,SAAS,CAAC2B;AAFD,CAAlB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC5B,EAAAA,SAAS,EAAGE,SAAD,IAAe0B,QAAQ,CAAC5B,SAAS,CAACE,SAAD,CAAV;AADM,CAAf,CAA3B;;AAIA,eAAeL,OAAO,CAAC,IAAD,EAAO8B,kBAAP,CAAP,CAAkC1B,KAAlC,CAAf","sourcesContent":["import React, { useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { hideModal } from '../../redux/modal/modalActions';\n\nconst Modal = memo(({ component, hideModal, ...additionalProps }) => {\n  const modalRoot = document.querySelector('#modal-root');\n  const el = document.createElement('div');\n  const Child = require(`../../components/${component}`).default;\n  el.className = 'modal grid';\n\n  useEffect(() => {\n    const hide = ({ target }) => {\n      if (target === el || !el.contains(target)) {\n        hideModal(component);\n      }\n    };\n    el.addEventListener('mousedown', hide, false);\n    modalRoot.appendChild(el);\n\n    return () => {\n      el.removeEventListener('mousedown', hide, false);\n      modalRoot.removeChild(el);\n    };\n  }, [el, modalRoot, hideModal, component]);\n\n  return ReactDOM.createPortal(\n    <Child hide={() => hideModal(component)} {...additionalProps} />,\n    el\n  );\n});\n\nModal.whyDidYouRender = true;\n\nModal.propTypes = {\n  component: PropTypes.string.isRequired,\n  props: PropTypes.object,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(null, mapDispatchToProps)(Modal);\n"]},"metadata":{},"sourceType":"module"}