{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/pages/LoginPage/LoginPage.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { githubSignInStart } from '../../redux/user/userActions';\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\nimport LoginCard from '../../components/LoginCard/LoginCard';\n\nconst LoginPage = ({\n  currentUser,\n  githubSignInStart\n}) => {\n  const history = useHistory();\n  const {\n    search\n  } = useLocation();\n  if (currentUser) history.push('/');\n  const params = new URLSearchParams(search);\n  const code = params.get('code');\n  const authState = params.get('state');\n  useEffect(() => {\n    if (code) {\n      if (!authState === sessionStorage.getItem('authState')) {\n        return console.warn('Auth state does not match.');\n      }\n\n      githubSignInStart(code);\n    }\n  }, [authState, code, githubSignInStart]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    \"data-test\": \"page-login\",\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-page__showcase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LoginCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nLoginPage.propTypes = {\n  currentUser: PropTypes.object\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  githubSignInStart: code => dispatch(githubSignInStart(code))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/pages/LoginPage/LoginPage.js"],"names":["React","useEffect","PropTypes","connect","createStructuredSelector","useHistory","useLocation","githubSignInStart","selectCurrentUser","LoginCard","LoginPage","currentUser","history","search","push","params","URLSearchParams","code","get","authState","sessionStorage","getItem","console","warn","propTypes","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeJ,EAAAA;AAAf,CAAD,KAAwC;AACxD,QAAMK,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaP,WAAW,EAA9B;AACA,MAAIK,WAAJ,EAAiBC,OAAO,CAACE,IAAR,CAAa,GAAb;AACjB,QAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoBH,MAApB,CAAf;AACA,QAAMI,IAAI,GAAGF,MAAM,CAACG,GAAP,CAAW,MAAX,CAAb;AACA,QAAMC,SAAS,GAAGJ,MAAM,CAACG,GAAP,CAAW,OAAX,CAAlB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAJ,EAAU;AACR,UAAI,CAACE,SAAD,KAAeC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAnB,EAAwD;AACtD,eAAOC,OAAO,CAACC,IAAR,CAAa,4BAAb,CAAP;AACD;;AACDhB,MAAAA,iBAAiB,CAACU,IAAD,CAAjB;AACD;AACF,GAPQ,EAON,CAACE,SAAD,EAAYF,IAAZ,EAAkBV,iBAAlB,CAPM,CAAT;AASA,sBACE;AAAM,iBAAU,YAAhB;AAA6B,IAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAvBD;;AAyBAG,SAAS,CAACc,SAAV,GAAsB;AACpBb,EAAAA,WAAW,EAAET,SAAS,CAACuB;AADH,CAAtB;AAIA,MAAMC,eAAe,GAAGtB,wBAAwB,CAAC;AAC/CO,EAAAA,WAAW,EAAEH;AADkC,CAAD,CAAhD;;AAIA,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,iBAAiB,EAAGU,IAAD,IAAUW,QAAQ,CAACrB,iBAAiB,CAACU,IAAD,CAAlB;AADG,CAAf,CAA3B;;AAIA,eAAed,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { githubSignInStart } from '../../redux/user/userActions';\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\n\nimport LoginCard from '../../components/LoginCard/LoginCard';\n\nconst LoginPage = ({ currentUser, githubSignInStart }) => {\n  const history = useHistory();\n  const { search } = useLocation();\n  if (currentUser) history.push('/');\n  const params = new URLSearchParams(search);\n  const code = params.get('code');\n  const authState = params.get('state');\n\n  useEffect(() => {\n    if (code) {\n      if (!authState === sessionStorage.getItem('authState')) {\n        return console.warn('Auth state does not match.');\n      }\n      githubSignInStart(code);\n    }\n  }, [authState, code, githubSignInStart]);\n\n  return (\n    <main data-test=\"page-login\" className=\"login-page\">\n      <div className=\"login-page__showcase\"></div>\n      <LoginCard />\n    </main>\n  );\n};\n\nLoginPage.propTypes = {\n  currentUser: PropTypes.object,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  githubSignInStart: (code) => dispatch(githubSignInStart(code)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}