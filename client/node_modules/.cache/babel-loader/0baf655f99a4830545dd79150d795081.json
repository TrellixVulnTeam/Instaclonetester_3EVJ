{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/FormInput/FormInput.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../Icon/Icon';\n\nconst FormInput = ({\n  type,\n  style,\n  valid,\n  placeholder,\n  fieldProps,\n  ...additionalProps\n}) => {\n  const [inputType, setInputType] = useState('password');\n\n  const handleClick = () => {\n    inputType === 'password' ? setInputType('text') : setInputType('password');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...style,\n      marginBottom: !placeholder ? '0' : '0.5rem'\n    },\n    \"data-test\": \"component-input\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-group__input\",\n    type: type === 'password' ? inputType : type,\n    placeholder: placeholder,\n    style: !placeholder ? {\n      padding: '1rem'\n    } : {}\n  }, fieldProps, additionalProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-group__placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, placeholder), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, typeof valid === 'boolean' ? valid ? /*#__PURE__*/React.createElement(Icon, {\n    className: \"color-grey\",\n    icon: \"checkmark-circle-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Icon, {\n    className: \"color-red\",\n    icon: \"close-circle-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }) : null, type === 'password' && /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleClick(),\n    className: \"form-group__toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, inputType === 'password' ? 'Show' : 'Hide')));\n};\n\nFormInput.propTypes = {\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default FormInput;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/FormInput/FormInput.js"],"names":["React","useState","PropTypes","Icon","FormInput","type","style","valid","placeholder","fieldProps","additionalProps","inputType","setInputType","handleClick","marginBottom","padding","propTypes","string","onChange","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,IADiB;AAEjBC,EAAAA,KAFiB;AAGjBC,EAAAA,KAHiB;AAIjBC,EAAAA,WAJiB;AAKjBC,EAAAA,UALiB;AAMjB,KAAGC;AANc,CAAD,KAOZ;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,UAAD,CAA1C;;AACA,QAAMY,WAAW,GAAG,MAAM;AACxBF,IAAAA,SAAS,KAAK,UAAd,GAA2BC,YAAY,CAAC,MAAD,CAAvC,GAAkDA,YAAY,CAAC,UAAD,CAA9D;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,KAAK,EAAE,EAAE,GAAGN,KAAL;AAAYQ,MAAAA,YAAY,EAAE,CAACN,WAAD,GAAe,GAAf,GAAqB;AAA/C,KADT;AAEE,iBAAU,iBAFZ;AAGE,IAAA,SAAS,EAAC,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,IAAI,EAAEH,IAAI,KAAK,UAAT,GAAsBM,SAAtB,GAAkCN,IAF1C;AAGE,IAAA,WAAW,EAAEG,WAHf;AAIE,IAAA,KAAK,EAAE,CAACA,WAAD,GAAe;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAf,GAAqC;AAJ9C,KAKMN,UALN,EAMMC,eANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,eAaE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CF,WAA3C,CAbF,eAcE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOD,KAAP,KAAiB,SAAjB,GACCA,KAAK,gBACH,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,IAAI,EAAC,0BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,gBAGH,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,GAMG,IAPN,EAQGF,IAAI,KAAK,UAAT,iBACC;AAAM,IAAA,OAAO,EAAE,MAAMQ,WAAW,EAAhC;AAAoC,IAAA,SAAS,EAAC,oBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,KAAK,UAAd,GAA2B,MAA3B,GAAoC,MADvC,CATJ,CAdF,CADF;AA+BD,CA5CD;;AA8CAP,SAAS,CAACY,SAAV,GAAsB;AACpBR,EAAAA,WAAW,EAAEN,SAAS,CAACe,MADH;AAEpBZ,EAAAA,IAAI,EAAEH,SAAS,CAACe,MAFI;AAGpBC,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB;AAHA,CAAtB;AAMA,eAAef,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../Icon/Icon';\n\nconst FormInput = ({\n  type,\n  style,\n  valid,\n  placeholder,\n  fieldProps,\n  ...additionalProps\n}) => {\n  const [inputType, setInputType] = useState('password');\n  const handleClick = () => {\n    inputType === 'password' ? setInputType('text') : setInputType('password');\n  };\n\n  return (\n    <div\n      style={{ ...style, marginBottom: !placeholder ? '0' : '0.5rem' }}\n      data-test=\"component-input\"\n      className=\"form-group\"\n    >\n      <input\n        className=\"form-group__input\"\n        type={type === 'password' ? inputType : type}\n        placeholder={placeholder}\n        style={!placeholder ? { padding: '1rem' } : {}}\n        {...fieldProps}\n        {...additionalProps}\n      />\n      <span className=\"form-group__placeholder\">{placeholder}</span>\n      <div className=\"input-icons\">\n        {typeof valid === 'boolean' ? (\n          valid ? (\n            <Icon className=\"color-grey\" icon=\"checkmark-circle-outline\" />\n          ) : (\n            <Icon className=\"color-red\" icon=\"close-circle-outline\" />\n          )\n        ) : null}\n        {type === 'password' && (\n          <span onClick={() => handleClick()} className=\"form-group__toggle\">\n            {inputType === 'password' ? 'Show' : 'Hide'}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nFormInput.propTypes = {\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}