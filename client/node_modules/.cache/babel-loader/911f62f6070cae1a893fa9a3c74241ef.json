{"ast":null,"code":"export const INITIAL_STATE = {\n  fetching: true,\n  following: false,\n  fetchingAdditionalPosts: false,\n  error: false,\n  data: {\n    posts: []\n  }\n};\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_PROFILE_START':\n      {\n        return { ...state,\n          fetching: true,\n          error: false\n        };\n      }\n\n    case 'FETCH_PROFILE_FAILURE':\n      {\n        return { ...state,\n          fetching: false,\n          error: action.payload\n        };\n      }\n\n    case 'FETCH_PROFILE_SUCCESS':\n      {\n        return { ...state,\n          fetching: false,\n          error: false,\n          data: { ...action.payload,\n            posts: action.payload.posts ? action.payload.posts.data : [],\n            postCount: action.payload.posts ? action.payload.posts.postCount : 0\n          }\n        };\n      }\n\n    case 'FETCH_ADDITIONAL_POSTS_START':\n      {\n        return { ...state,\n          fetchingAdditionalPosts: true\n        };\n      }\n\n    case 'FETCH_ADDITIONAL_POSTS_FAILURE':\n      {\n        return { ...state,\n          fetchingAdditionalPosts: false,\n          error: action.payload\n        };\n      }\n\n    case 'FETCH_ADDITIONAL_POSTS_SUCCESS':\n      {\n        return { ...state,\n          fetchingAdditionalPosts: false,\n          error: false\n        };\n      }\n\n    case 'SET_POST_VOTES_COUNT':\n      {\n        const {\n          postId,\n          votes\n        } = action.payload;\n        const posts = JSON.parse(JSON.stringify(state.data.posts));\n        const postIndex = posts.findIndex(post => post._id === postId);\n        posts[postIndex].postVotes = votes;\n        return { ...state,\n          data: { ...state.data,\n            posts\n          }\n        };\n      }\n\n    case 'INCREMENT_POST_COMMENTS_COUNT':\n      {\n        const postId = action.payload;\n        const posts = JSON.parse(JSON.stringify(state.data.posts));\n        const postIndex = posts.findIndex(post => post._id === postId);\n        posts[postIndex].comments += 1;\n        return { ...state,\n          data: { ...state.data,\n            posts\n          }\n        };\n      }\n\n    case 'DECREMENT_POST_COMMENTS_COUNT':\n      {\n        const {\n          decrementCount,\n          postId\n        } = action.payload;\n        const posts = JSON.parse(JSON.stringify(state.data.posts));\n        const postIndex = posts.findIndex(post => post._id === postId);\n        posts[postIndex].comments -= decrementCount;\n        return { ...state,\n          data: { ...state.data,\n            posts\n          }\n        };\n      }\n\n    case 'ADD_POSTS':\n      {\n        const posts = action.payload;\n        return { ...state,\n          data: { ...state.data,\n            posts: [...state.data.posts, ...posts]\n          }\n        };\n      }\n\n    case 'DELETE_POST':\n      {\n        return { ...state,\n          data: { ...state.data,\n            postCount: state.data.postCount - 1,\n            posts: state.data.posts.filter(post => post._id !== action.payload)\n          }\n        };\n      }\n\n    case 'FOLLOW_USER_START':\n      {\n        return { ...state,\n          following: true\n        };\n      }\n\n    case 'FOLLOW_USER_FAILURE':\n      {\n        return { ...state,\n          following: false,\n          error: action.payload\n        };\n      }\n\n    case 'FOLLOW_USER_SUCCESS':\n      {\n        if (action.payload === 'follow') {\n          return { ...state,\n            following: false,\n            data: { ...state.data,\n              isFollowing: true,\n              followers: state.data.followers + 1\n            }\n          };\n        }\n\n        return { ...state,\n          following: false,\n          data: { ...state.data,\n            isFollowing: false,\n            followers: state.data.followers - 1\n          }\n        };\n      }\n\n    default:\n      {\n        throw new Error(`Invalid action type '${action.type}' passed to profileReducer.`);\n      }\n  }\n};","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/pages/ProfilePage/ProfilePageReducer.js"],"names":["INITIAL_STATE","fetching","following","fetchingAdditionalPosts","error","data","posts","profileReducer","state","action","type","payload","postCount","postId","votes","JSON","parse","stringify","postIndex","findIndex","post","_id","postVotes","comments","decrementCount","filter","isFollowing","followers","Error"],"mappings":"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","sourcesContent":["export const INITIAL_STATE = {\n  fetching: true,\n  following: false,\n  fetchingAdditionalPosts: false,\n  error: false,\n  data: {\n    posts: [],\n  },\n};\n\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_PROFILE_START': {\n      return { ...state, fetching: true, error: false };\n    }\n    case 'FETCH_PROFILE_FAILURE': {\n      return { ...state, fetching: false, error: action.payload };\n    }\n    case 'FETCH_PROFILE_SUCCESS': {\n      return {\n        ...state,\n        fetching: false,\n        error: false,\n        data: {\n          ...action.payload,\n          posts: action.payload.posts ? action.payload.posts.data : [],\n          postCount: action.payload.posts ? action.payload.posts.postCount : 0,\n        },\n      };\n    }\n    case 'FETCH_ADDITIONAL_POSTS_START': {\n      return { ...state, fetchingAdditionalPosts: true };\n    }\n    case 'FETCH_ADDITIONAL_POSTS_FAILURE': {\n      return {\n        ...state,\n        fetchingAdditionalPosts: false,\n        error: action.payload,\n      };\n    }\n    case 'FETCH_ADDITIONAL_POSTS_SUCCESS': {\n      return { ...state, fetchingAdditionalPosts: false, error: false };\n    }\n    case 'SET_POST_VOTES_COUNT': {\n      const { postId, votes } = action.payload;\n      const posts = JSON.parse(JSON.stringify(state.data.posts));\n      const postIndex = posts.findIndex((post) => post._id === postId);\n      posts[postIndex].postVotes = votes;\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts,\n        },\n      };\n    }\n    case 'INCREMENT_POST_COMMENTS_COUNT': {\n      const postId = action.payload;\n      const posts = JSON.parse(JSON.stringify(state.data.posts));\n      const postIndex = posts.findIndex((post) => post._id === postId);\n      posts[postIndex].comments += 1;\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts,\n        },\n      };\n    }\n    case 'DECREMENT_POST_COMMENTS_COUNT': {\n      const { decrementCount, postId } = action.payload;\n      const posts = JSON.parse(JSON.stringify(state.data.posts));\n      const postIndex = posts.findIndex((post) => post._id === postId);\n      posts[postIndex].comments -= decrementCount;\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts,\n        },\n      };\n    }\n    case 'ADD_POSTS': {\n      const posts = action.payload;\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts: [...state.data.posts, ...posts],\n        },\n      };\n    }\n    case 'DELETE_POST': {\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          postCount: state.data.postCount - 1,\n          posts: state.data.posts.filter((post) => post._id !== action.payload),\n        },\n      };\n    }\n    case 'FOLLOW_USER_START': {\n      return { ...state, following: true };\n    }\n    case 'FOLLOW_USER_FAILURE': {\n      return { ...state, following: false, error: action.payload };\n    }\n    case 'FOLLOW_USER_SUCCESS': {\n      if (action.payload === 'follow') {\n        return {\n          ...state,\n          following: false,\n          data: {\n            ...state.data,\n            isFollowing: true,\n            followers: state.data.followers + 1,\n          },\n        };\n      }\n      return {\n        ...state,\n        following: false,\n        data: {\n          ...state.data,\n          isFollowing: false,\n          followers: state.data.followers - 1,\n        },\n      };\n    }\n    default: {\n      throw new Error(\n        `Invalid action type '${action.type}' passed to profileReducer.`\n      );\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}