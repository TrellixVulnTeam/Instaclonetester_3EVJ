{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/Suggestion/SuggestedUsers/SuggestedUsers.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { showAlert } from '../../../redux/alert/alertActions';\nimport { selectToken } from '../../../redux/user/userSelectors';\nimport { getSuggestedUsers } from '../../../services/userService';\nimport UserCard from '../../UserCard/UserCard';\nimport UserListSkeleton from '../../UsersList/UsersListSkeleton/UsersListSkeleton';\nimport Card from '../../Card/Card';\nimport FollowButton from '../../Button/FollowButton/FollowButton';\nimport SuggestionCard from '../SuggestionCard/SuggestionCard';\n\nconst SuggestedUsers = ({\n  token,\n  showAlert,\n  card,\n  style,\n  max\n}) => {\n  const [users, setUsers] = useState(null);\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await getSuggestedUsers(token, max);\n        setUsers(response);\n      } catch (err) {\n        showAlert(err.message);\n      }\n    })();\n  }, [token, showAlert]);\n\n  const renderUsers = () => {\n    if (users) {\n      return users.length > 0 ? users.map((user, idx) => /*#__PURE__*/React.createElement(UserCard, {\n        avatar: user.avatar,\n        username: user.username,\n        subText: user.fullName,\n        style: card ? {\n          padding: '1.5rem'\n        } : {\n          padding: '1rem 0'\n        },\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FollowButton, {\n        userId: user._id,\n        username: user.username,\n        following: false,\n        avatar: user.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }))) : /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"heading-4 color-grey font-medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, \"We currently can't find any users to suggest.\");\n    }\n\n    return /*#__PURE__*/React.createElement(UserListSkeleton, {\n      amount: 5,\n      style: {\n        padding: '1.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggested-users\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggested-users__large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3 mb-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Suggestions for you\"), card ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, renderUsers()) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 50\n    }\n  }, renderUsers())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggested-users__small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggested-users__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"heading-2 font-thin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Welcome to Instaclone\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3 font-medium color-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"When you follow somebody you can see their photos here.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggested-users__card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, users && users.map((user, idx) => /*#__PURE__*/React.createElement(SuggestionCard, {\n    avatar: user.avatar,\n    username: user.username,\n    fullName: user.fullName,\n    posts: user.posts,\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FollowButton, {\n    userId: user._id,\n    username: user.username,\n    following: false,\n    avatar: user.avatar,\n    style: {\n      width: '90%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  token: selectToken\n});\n\nconst mapDispatchToProps = disptach => ({\n  showAlert: (text, onClick) => disptach(showAlert(text, onClick))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SuggestedUsers);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/Suggestion/SuggestedUsers/SuggestedUsers.js"],"names":["React","Fragment","useEffect","useState","connect","createStructuredSelector","showAlert","selectToken","getSuggestedUsers","UserCard","UserListSkeleton","Card","FollowButton","SuggestionCard","SuggestedUsers","token","card","style","max","users","setUsers","response","err","message","renderUsers","length","map","user","idx","avatar","username","fullName","padding","_id","posts","width","mapStateToProps","mapDispatchToProps","disptach","text","onClick"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { showAlert } from '../../../redux/alert/alertActions';\nimport { selectToken } from '../../../redux/user/userSelectors';\n\nimport { getSuggestedUsers } from '../../../services/userService';\n\nimport UserCard from '../../UserCard/UserCard';\nimport UserListSkeleton from '../../UsersList/UsersListSkeleton/UsersListSkeleton';\nimport Card from '../../Card/Card';\nimport FollowButton from '../../Button/FollowButton/FollowButton';\nimport SuggestionCard from '../SuggestionCard/SuggestionCard';\n\nconst SuggestedUsers = ({ token, showAlert, card, style, max }) => {\n  const [users, setUsers] = useState(null);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await getSuggestedUsers(token, max);\n        setUsers(response);\n      } catch (err) {\n        showAlert(err.message);\n      }\n    })();\n  }, [token, showAlert]);\n\n  const renderUsers = () => {\n    if (users) {\n      return users.length > 0 ? (\n        users.map((user, idx) => (\n          <UserCard\n            avatar={user.avatar}\n            username={user.username}\n            subText={user.fullName}\n            style={card ? { padding: '1.5rem' } : { padding: '1rem 0' }}\n            key={idx}\n          >\n            <FollowButton\n              userId={user._id}\n              username={user.username}\n              following={false}\n              avatar={user.avatar}\n            />\n          </UserCard>\n        ))\n      ) : (\n        <h4 className=\"heading-4 color-grey font-medium\">\n          We currently can't find any users to suggest.\n        </h4>\n      );\n    }\n\n    return <UserListSkeleton amount={5} style={{ padding: '1.5rem' }} />;\n  };\n\n  return (\n    <div className=\"suggested-users\" style={style}>\n      <Fragment>\n        <div className=\"suggested-users__large\">\n          <h3 className=\"heading-3 mb-md\">Suggestions for you</h3>\n          {card ? <Card>{renderUsers()}</Card> : <div>{renderUsers()}</div>}\n        </div>\n        <div className=\"suggested-users__small\">\n          <div className=\"suggested-users__title\">\n            <h2 className=\"heading-2 font-thin\">Welcome to Instaclone</h2>\n            <h3 className=\"heading-3 font-medium color-grey\">\n              When you follow somebody you can see their photos here.\n            </h3>\n          </div>\n          <div className=\"suggested-users__card-container\">\n            {users &&\n              users.map((user, idx) => (\n                <SuggestionCard\n                  avatar={user.avatar}\n                  username={user.username}\n                  fullName={user.fullName}\n                  posts={user.posts}\n                  key={idx}\n                >\n                  <FollowButton\n                    userId={user._id}\n                    username={user.username}\n                    following={false}\n                    avatar={user.avatar}\n                    style={{ width: '90%' }}\n                  />\n                </SuggestionCard>\n              ))}\n          </div>\n        </div>\n      </Fragment>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  token: selectToken,\n});\n\nconst mapDispatchToProps = (disptach) => ({\n  showAlert: (text, onClick) => disptach(showAlert(text, onClick)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SuggestedUsers);\n"]},"metadata":{},"sourceType":"module"}