{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/SearchSuggestion/SearchSuggestion.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\nimport { searchUsers } from '../../services/userService';\nimport UsersListSkeleton from '../UsersList/UsersListSkeleton/UsersListSkeleton';\nimport UserCard from '../UserCard/UserCard';\n\nconst SearchSuggestion = ({\n  fetching,\n  result,\n  onClick,\n  username\n}) => {\n  const [additionalUsers, setAdditionalUsers] = useState([]);\n  const [shouldFetch, setShouldFetch] = useState(false);\n  const [fetchingAdditionalUsers, setFetchingAdditionalUsers] = useState(false);\n  const componentRef = useRef();\n  const offset = 10;\n  useEffect(() => {\n    if (result.length === offset && !shouldFetch) setShouldFetch(true);\n  }, [result, shouldFetch]);\n  useScrollPositionThrottled(async ({\n    atBottom\n  }) => {\n    if (atBottom && shouldFetch && !fetching && !fetchingAdditionalUsers) {\n      try {\n        setFetchingAdditionalUsers(true);\n        const users = await searchUsers(username, result.length + additionalUsers.length); // Returned less than the max users meaning there are no more users to fetch\n\n        if (users.length !== offset) setShouldFetch(false);\n        setAdditionalUsers(previous => [...previous, ...users]);\n        setFetchingAdditionalUsers(false);\n      } catch (err) {\n        setFetchingAdditionalUsers(false);\n        setShouldFetch(false);\n      }\n    }\n  }, componentRef.current, [shouldFetch, fetching, fetchingAdditionalUsers]);\n\n  const renderUserCard = (user, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserCard, {\n    username: user.username,\n    avatar: user.avatar,\n    subText: user.fullName,\n    onClick: () => onClick(user),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    ref: componentRef,\n    className: \"search-suggestion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, fetching ? /*#__PURE__*/React.createElement(UsersListSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }) : result.map((user, idx) => renderUserCard(user, idx)), fetchingAdditionalUsers ? /*#__PURE__*/React.createElement(UsersListSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }) : additionalUsers.map((user, idx) => renderUserCard(user, idx)));\n};\n\nexport default SearchSuggestion;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/SearchSuggestion/SearchSuggestion.js"],"names":["React","useState","useRef","useEffect","useScrollPositionThrottled","searchUsers","UsersListSkeleton","UserCard","SearchSuggestion","fetching","result","onClick","username","additionalUsers","setAdditionalUsers","shouldFetch","setShouldFetch","fetchingAdditionalUsers","setFetchingAdditionalUsers","componentRef","offset","length","atBottom","users","previous","err","current","renderUserCard","user","idx","avatar","fullName","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,0BAAP,MAAuC,wCAAvC;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AACpE,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACgB,uBAAD,EAA0BC,0BAA1B,IAAwDjB,QAAQ,CAAC,KAAD,CAAtE;AACA,QAAMkB,YAAY,GAAGjB,MAAM,EAA3B;AACA,QAAMkB,MAAM,GAAG,EAAf;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAM,CAACW,MAAP,KAAkBD,MAAlB,IAA4B,CAACL,WAAjC,EAA8CC,cAAc,CAAC,IAAD,CAAd;AAC/C,GAFQ,EAEN,CAACN,MAAD,EAASK,WAAT,CAFM,CAAT;AAIAX,EAAAA,0BAA0B,CACxB,OAAO;AAAEkB,IAAAA;AAAF,GAAP,KAAwB;AACtB,QAAIA,QAAQ,IAAIP,WAAZ,IAA2B,CAACN,QAA5B,IAAwC,CAACQ,uBAA7C,EAAsE;AACpE,UAAI;AACFC,QAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACA,cAAMK,KAAK,GAAG,MAAMlB,WAAW,CAC7BO,QAD6B,EAE7BF,MAAM,CAACW,MAAP,GAAgBR,eAAe,CAACQ,MAFH,CAA/B,CAFE,CAMF;;AACA,YAAIE,KAAK,CAACF,MAAN,KAAiBD,MAArB,EAA6BJ,cAAc,CAAC,KAAD,CAAd;AAC7BF,QAAAA,kBAAkB,CAAEU,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc,GAAGD,KAAjB,CAAf,CAAlB;AACAL,QAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACD,OAVD,CAUE,OAAOO,GAAP,EAAY;AACZP,QAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAF,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF;AACF,GAlBuB,EAmBxBG,YAAY,CAACO,OAnBW,EAoBxB,CAACX,WAAD,EAAcN,QAAd,EAAwBQ,uBAAxB,CApBwB,CAA1B;;AAuBA,QAAMU,cAAc,GAAG,CAACC,IAAD,EAAOC,GAAP,kBACrB;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAED,IAAI,CAAChB,QADjB;AAEE,IAAA,MAAM,EAAEgB,IAAI,CAACE,MAFf;AAGE,IAAA,OAAO,EAAEF,IAAI,CAACG,QAHhB;AAIE,IAAA,OAAO,EAAE,MAAMpB,OAAO,CAACiB,IAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAWA,sBACE;AAAI,IAAA,GAAG,EAAET,YAAT;AAAuB,IAAA,SAAS,EAAC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QAAQ,gBACP,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGPC,MAAM,CAACsB,GAAP,CAAW,CAACJ,IAAD,EAAOC,GAAP,KAAeF,cAAc,CAACC,IAAD,EAAOC,GAAP,CAAxC,CAJJ,EAMGZ,uBAAuB,gBACtB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsB,GAGtBJ,eAAe,CAACmB,GAAhB,CAAoB,CAACJ,IAAD,EAAOC,GAAP,KAAeF,cAAc,CAACC,IAAD,EAAOC,GAAP,CAAjD,CATJ,CADF;AAcD,CA3DD;;AA6DA,eAAerB,gBAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\n\nimport { searchUsers } from '../../services/userService';\n\nimport UsersListSkeleton from '../UsersList/UsersListSkeleton/UsersListSkeleton';\nimport UserCard from '../UserCard/UserCard';\n\nconst SearchSuggestion = ({ fetching, result, onClick, username }) => {\n  const [additionalUsers, setAdditionalUsers] = useState([]);\n  const [shouldFetch, setShouldFetch] = useState(false);\n  const [fetchingAdditionalUsers, setFetchingAdditionalUsers] = useState(false);\n  const componentRef = useRef();\n  const offset = 10;\n\n  useEffect(() => {\n    if (result.length === offset && !shouldFetch) setShouldFetch(true);\n  }, [result, shouldFetch]);\n\n  useScrollPositionThrottled(\n    async ({ atBottom }) => {\n      if (atBottom && shouldFetch && !fetching && !fetchingAdditionalUsers) {\n        try {\n          setFetchingAdditionalUsers(true);\n          const users = await searchUsers(\n            username,\n            result.length + additionalUsers.length\n          );\n          // Returned less than the max users meaning there are no more users to fetch\n          if (users.length !== offset) setShouldFetch(false);\n          setAdditionalUsers((previous) => [...previous, ...users]);\n          setFetchingAdditionalUsers(false);\n        } catch (err) {\n          setFetchingAdditionalUsers(false);\n          setShouldFetch(false);\n        }\n      }\n    },\n    componentRef.current,\n    [shouldFetch, fetching, fetchingAdditionalUsers]\n  );\n\n  const renderUserCard = (user, idx) => (\n    <li key={idx}>\n      <UserCard\n        username={user.username}\n        avatar={user.avatar}\n        subText={user.fullName}\n        onClick={() => onClick(user)}\n      />\n    </li>\n  );\n\n  return (\n    <ul ref={componentRef} className=\"search-suggestion\">\n      {fetching ? (\n        <UsersListSkeleton />\n      ) : (\n        result.map((user, idx) => renderUserCard(user, idx))\n      )}\n      {fetchingAdditionalUsers ? (\n        <UsersListSkeleton />\n      ) : (\n        additionalUsers.map((user, idx) => renderUserCard(user, idx))\n      )}\n    </ul>\n  );\n};\n\nexport default SearchSuggestion;\n"]},"metadata":{},"sourceType":"module"}