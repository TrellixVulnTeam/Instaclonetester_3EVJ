{"ast":null,"code":"import notificationTypes from './notificationTypes';\nimport { retrieveNotifications, readNotifications } from '../../services/notificationServices';\nexport const addNotification = notification => ({\n  type: notificationTypes.ADD_NOTIFICATION,\n  payload: notification\n});\nexport const fetchNotificationsStart = authToken => async dispatch => {\n  try {\n    dispatch({\n      type: notificationTypes.FETCH_NOTIFICATIONS_START\n    });\n    const response = await retrieveNotifications(authToken);\n    dispatch({\n      type: notificationTypes.FETCH_NOTIFICATIONS_SUCCESS,\n      payload: response\n    });\n  } catch (err) {\n    dispatch({\n      type: notificationTypes.FETCH_NOTIFICATIONS_FAILURE,\n      payload: err.message\n    });\n  }\n};\nexport const readNotificationsStart = authToken => async dispatch => {\n  try {\n    dispatch({\n      type: notificationTypes.READ_NOTIFICATIONS\n    });\n    await readNotifications(authToken);\n  } catch (err) {\n    console.warn(err.message);\n  }\n};\nexport const clearNotifications = () => ({\n  type: notificationTypes.CLEAR_NOTIFICATIONS\n});","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/redux/notification/notificationActions.js"],"names":["notificationTypes","retrieveNotifications","readNotifications","addNotification","notification","type","ADD_NOTIFICATION","payload","fetchNotificationsStart","authToken","dispatch","FETCH_NOTIFICATIONS_START","response","FETCH_NOTIFICATIONS_SUCCESS","err","FETCH_NOTIFICATIONS_FAILURE","message","readNotificationsStart","READ_NOTIFICATIONS","console","warn","clearNotifications","CLEAR_NOTIFICATIONS"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AAEA,SACEC,qBADF,EAEEC,iBAFF,QAGO,qCAHP;AAKA,OAAO,MAAMC,eAAe,GAAIC,YAAD,KAAmB;AAChDC,EAAAA,IAAI,EAAEL,iBAAiB,CAACM,gBADwB;AAEhDC,EAAAA,OAAO,EAAEH;AAFuC,CAAnB,CAAxB;AAKP,OAAO,MAAMI,uBAAuB,GAAIC,SAAD,IAAe,MAAOC,QAAP,IAAoB;AACxE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEL,iBAAiB,CAACW;AAA1B,KAAD,CAAR;AACA,UAAMC,QAAQ,GAAG,MAAMX,qBAAqB,CAACQ,SAAD,CAA5C;AACAC,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAEL,iBAAiB,CAACa,2BADjB;AAEPN,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOE,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAEL,iBAAiB,CAACe,2BADjB;AAEPR,MAAAA,OAAO,EAAEO,GAAG,CAACE;AAFN,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,sBAAsB,GAAIR,SAAD,IAAe,MAAOC,QAAP,IAAoB;AACvE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEL,iBAAiB,CAACkB;AAA1B,KAAD,CAAR;AACA,UAAMhB,iBAAiB,CAACO,SAAD,CAAvB;AACD,GAHD,CAGE,OAAOK,GAAP,EAAY;AACZK,IAAAA,OAAO,CAACC,IAAR,CAAaN,GAAG,CAACE,OAAjB;AACD;AACF,CAPM;AASP,OAAO,MAAMK,kBAAkB,GAAG,OAAO;AACvChB,EAAAA,IAAI,EAAEL,iBAAiB,CAACsB;AADe,CAAP,CAA3B","sourcesContent":["import notificationTypes from './notificationTypes';\n\nimport {\n  retrieveNotifications,\n  readNotifications,\n} from '../../services/notificationServices';\n\nexport const addNotification = (notification) => ({\n  type: notificationTypes.ADD_NOTIFICATION,\n  payload: notification,\n});\n\nexport const fetchNotificationsStart = (authToken) => async (dispatch) => {\n  try {\n    dispatch({ type: notificationTypes.FETCH_NOTIFICATIONS_START });\n    const response = await retrieveNotifications(authToken);\n    dispatch({\n      type: notificationTypes.FETCH_NOTIFICATIONS_SUCCESS,\n      payload: response,\n    });\n  } catch (err) {\n    dispatch({\n      type: notificationTypes.FETCH_NOTIFICATIONS_FAILURE,\n      payload: err.message,\n    });\n  }\n};\n\nexport const readNotificationsStart = (authToken) => async (dispatch) => {\n  try {\n    dispatch({ type: notificationTypes.READ_NOTIFICATIONS });\n    await readNotifications(authToken);\n  } catch (err) {\n    console.warn(err.message);\n  }\n};\n\nexport const clearNotifications = () => ({\n  type: notificationTypes.CLEAR_NOTIFICATIONS,\n});\n"]},"metadata":{},"sourceType":"module"}