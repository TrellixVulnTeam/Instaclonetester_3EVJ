{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/Notification/NotificationButton/NotificationPopup/NotificationPopup.js\";\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport Icon from '../../../Icon/Icon';\n\nconst NotificationPopup = ({\n  style,\n  notifications\n}) => {\n  let newFollowers = 0;\n  let newLikes = 0;\n  let newComments = 0;\n  notifications.forEach(notification => {\n    if (!notification.read) {\n      switch (notification.notificationType) {\n        case 'follow':\n          {\n            newFollowers += 1;\n            break;\n          }\n\n        case 'comment':\n        case 'mention':\n          {\n            newComments += 1;\n            break;\n          }\n\n        default:\n          {\n            newLikes += 1;\n          }\n      }\n    }\n  });\n\n  const renderIcons = (icon, number) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"icon--small\",\n    icon: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, number));\n\n  return /*#__PURE__*/React.createElement(animated.div, {\n    className: \"notification-button__popup\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, newFollowers > 0 && renderIcons('person', newFollowers), newLikes > 0 && renderIcons('heart', newLikes), newComments > 0 && renderIcons('chatbubble', newComments));\n};\n\nexport default NotificationPopup;","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/Notification/NotificationButton/NotificationPopup/NotificationPopup.js"],"names":["React","animated","Icon","NotificationPopup","style","notifications","newFollowers","newLikes","newComments","forEach","notification","read","notificationType","renderIcons","icon","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA8B;AACtD,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,WAAW,GAAG,CAAlB;AAEAH,EAAAA,aAAa,CAACI,OAAd,CAAuBC,YAAD,IAAkB;AACtC,QAAI,CAACA,YAAY,CAACC,IAAlB,EAAwB;AACtB,cAAQD,YAAY,CAACE,gBAArB;AACE,aAAK,QAAL;AAAe;AACbN,YAAAA,YAAY,IAAI,CAAhB;AACA;AACD;;AACD,aAAK,SAAL;AACA,aAAK,SAAL;AAAgB;AACdE,YAAAA,WAAW,IAAI,CAAf;AACA;AACD;;AACD;AAAS;AACPD,YAAAA,QAAQ,IAAI,CAAZ;AACD;AAZH;AAcD;AACF,GAjBD;;AAmBA,QAAMM,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,kBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,MAAP,CAFF,CADF;;AAOA,sBACE,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,SAAS,EAAC,4BAAxB;AAAqD,IAAA,KAAK,EAAEX,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,GAAG,CAAf,IAAoBO,WAAW,CAAC,QAAD,EAAWP,YAAX,CADlC,EAEGC,QAAQ,GAAG,CAAX,IAAgBM,WAAW,CAAC,OAAD,EAAUN,QAAV,CAF9B,EAGGC,WAAW,GAAG,CAAd,IAAmBK,WAAW,CAAC,YAAD,EAAeL,WAAf,CAHjC,CADF;AAOD,CAtCD;;AAwCA,eAAeL,iBAAf","sourcesContent":["import React from 'react';\nimport { animated } from 'react-spring';\n\nimport Icon from '../../../Icon/Icon';\n\nconst NotificationPopup = ({ style, notifications }) => {\n  let newFollowers = 0;\n  let newLikes = 0;\n  let newComments = 0;\n\n  notifications.forEach((notification) => {\n    if (!notification.read) {\n      switch (notification.notificationType) {\n        case 'follow': {\n          newFollowers += 1;\n          break;\n        }\n        case 'comment':\n        case 'mention': {\n          newComments += 1;\n          break;\n        }\n        default: {\n          newLikes += 1;\n        }\n      }\n    }\n  });\n\n  const renderIcons = (icon, number) => (\n    <div>\n      <Icon className=\"icon--small\" icon={icon} />\n      <span>{number}</span>\n    </div>\n  );\n\n  return (\n    <animated.div className=\"notification-button__popup\" style={style}>\n      {newFollowers > 0 && renderIcons('person', newFollowers)}\n      {newLikes > 0 && renderIcons('heart', newLikes)}\n      {newComments > 0 && renderIcons('chatbubble', newComments)}\n    </animated.div>\n  );\n};\n\nexport default NotificationPopup;\n"]},"metadata":{},"sourceType":"module"}