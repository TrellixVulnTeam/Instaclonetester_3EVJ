{"ast":null,"code":"var _jsxFileName = \"/Users/jidesh/Documents/instaclone/client/src/components/UserCard/UserCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { hideModal } from '../../redux/modal/modalActions';\nimport { formatDateDistance } from '../../utils/timeUtils';\nimport Avatar from '../Avatar/Avatar';\n\nconst UserCard = ({\n  avatar,\n  username,\n  subText,\n  subTextDark,\n  date,\n  style,\n  hideModal,\n  onClick,\n  children,\n  avatarMedium\n}) => {\n  const avatarClassNames = classNames({\n    'avatar--small': !avatarMedium,\n    'avatar--medium': avatarMedium\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-card\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, onClick ? /*#__PURE__*/React.createElement(Avatar, {\n    onClick: () => onClick(),\n    className: avatarClassNames,\n    imageSrc: avatar,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Link, {\n    style: {\n      display: 'flex'\n    },\n    onClick: () => hideModal('OptionsDialog'),\n    to: `/${username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: avatarClassNames,\n    imageSrc: avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-card__details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, onClick ? /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => onClick(),\n    style: {\n      cursor: 'pointer'\n    },\n    className: \"heading-4 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, username) : /*#__PURE__*/React.createElement(Link, {\n    onClick: () => hideModal('OptionsDialog'),\n    style: {\n      textDecoration: 'none'\n    },\n    to: `/${username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading-4 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, username)), subText && /*#__PURE__*/React.createElement(\"p\", {\n    className: `heading-4 ${subTextDark ? 'color-black' : 'color-grey'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, subText, date && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"color-grey ml-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, formatDateDistance(date)))), children);\n};\n\nconst mapDispatchToProps = dispatch => ({\n  hideModal: component => dispatch(hideModal(component))\n});\n\nexport default connect(null, mapDispatchToProps)(UserCard);","map":{"version":3,"sources":["/Users/jidesh/Documents/instaclone/client/src/components/UserCard/UserCard.js"],"names":["React","connect","Link","classNames","hideModal","formatDateDistance","Avatar","UserCard","avatar","username","subText","subTextDark","date","style","onClick","children","avatarMedium","avatarClassNames","cursor","display","textDecoration","mapDispatchToProps","dispatch","component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { hideModal } from '../../redux/modal/modalActions';\nimport { formatDateDistance } from '../../utils/timeUtils';\n\nimport Avatar from '../Avatar/Avatar';\n\nconst UserCard = ({\n  avatar,\n  username,\n  subText,\n  subTextDark,\n  date,\n  style,\n  hideModal,\n  onClick,\n  children,\n  avatarMedium,\n}) => {\n  const avatarClassNames = classNames({\n    'avatar--small': !avatarMedium,\n    'avatar--medium': avatarMedium,\n  });\n  return (\n    <div className=\"user-card\" style={style}>\n      {onClick ? (\n        <Avatar\n          onClick={() => onClick()}\n          className={avatarClassNames}\n          imageSrc={avatar}\n          style={{ cursor: 'pointer' }}\n        />\n      ) : (\n        <Link\n          style={{ display: 'flex' }}\n          onClick={() => hideModal('OptionsDialog')}\n          to={`/${username}`}\n        >\n          <Avatar className={avatarClassNames} imageSrc={avatar} />\n        </Link>\n      )}\n      <div className=\"user-card__details\">\n        {onClick ? (\n          <p\n            onClick={() => onClick()}\n            style={{ cursor: 'pointer' }}\n            className=\"heading-4 font-bold\"\n          >\n            {username}\n          </p>\n        ) : (\n          <Link\n            onClick={() => hideModal('OptionsDialog')}\n            style={{ textDecoration: 'none' }}\n            to={`/${username}`}\n          >\n            <p className=\"heading-4 font-bold\">{username}</p>\n          </Link>\n        )}\n        {subText && (\n          <p\n            className={`heading-4 ${\n              subTextDark ? 'color-black' : 'color-grey'\n            }`}\n          >\n            {subText}\n            {date && (\n              <span className=\"color-grey ml-sm\">\n                {formatDateDistance(date)}\n              </span>\n            )}\n          </p>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(null, mapDispatchToProps)(UserCard);\n"]},"metadata":{},"sourceType":"module"}